{"version":3,"sources":["containers/Service/Service.css","containers/Report/Report.css","containers/Auth/Auth.css","components/Service/ServiceInfo/ServiceInfo.css","components/UI/TextField/TextField.js","utils/Auxilary.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Auth/Auth.js","utils/axiosHandler.js","components/MenuBar/MenuBar.js","components/Layout/Layout.js","store/actions/service.js","components/EmptyMessage/EmptyMessage.js","components/Service/ServiceInfo/ServiceInfo.js","components/Service/ServiceGrid/ServiceGrid.js","components/UI/CircleButton/CircleButton.js","components/UI/ButtonsBar/ButtonsBar.js","components/UI/Modal/Modal.js","containers/Stepper/Stepper.js","components/Service/ServiceProperties/ServiceProperties.js","components/Service/ServiceModal/ServiceModal.js","containers/Service/Service.js","components/Service/ServiceDetails/ServiceDetails.js","store/actions/device.js","components/Device/DeviceInfo/DeviceInfo.js","components/Device/DeviceGrid/DeviceGrid.js","components/Device/DeviceRegister/DeviceRegister.js","components/Device/DeviceServices/ServiceItem.js","components/Device/DeviceServices/DeviceServices.js","components/Device/DeviceModal/DeviceModal.js","containers/Device/Device.js","components/Service/ServicesSelect/ServicesSelect.js","components/Reports/ReportModal/ReportModal.js","components/Reports/ReportItem/ReportItem.js","store/actions/report.js","components/Reports/SimpleReport/SimpleReport.js","containers/Report/Report.js","components/Reports/ReportResult/ReportResult.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/service.js","store/reducers/device.js","store/reducers/report.js","index.js","components/Service/ServiceProperties/ServiceProperties.css","components/Device/DeviceInfo/DeviceInfo.css","components/MenuBar/MenuBar.css","assets/images/bitbird.png","containers/Stepper/Stepper.css","components/Service/ServiceDetails/ServiceDetails.css"],"names":["module","exports","container","loginPanel","loginHeader","loginText","domainText","buttonsGrid","errorPanel","notSelectedService","selectedService","title","text","icon","link","MyTextField","props","react_default","a","createElement","index_es","Object","assign","style","marginBottom","Aux","children","setLogin","token","localStorage","setItem","axios","defaults","headers","common","concat","type","Auth","state","isInRegisterMode","errors","onSubmit","event","preventDefault","_this","formValidation","password","rePassword","push","length","setState","actionHandler","toggleRegisterModeHandler","preState","onRegister","objectSpread","onLogin","_this2","this","backgroundImage","bg","registerFields","Auxilary","TextField","required","fullWidth","label","name","onChange","onFieldChanged","className","classes","xs","item","map","error","variant","color","onClick","Component","connect","auth","dispatch","user","username","post","then","result","data","authActions","filed","target","value","family","axiosHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isLoading","inherits","createClass","key","reqInterceptor","interceptors","request","use","req","resInterceptor","response","message","status","entries","x","Promise","reject","eject","_this3","width","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","open","onLogout","removeItem","AppBar_default","position","Toolbar_default","Link","to","BottomNavigationAction_default","selectedLinks","showLabel","Cloud_default","Router_default","Poll_default","rightLinks","src","logo","height","Layout","menuBar","isAuthenticated","components_MenuBar_MenuBar","getAll","get","services","getServiceDetailsById","id","resolve","onLoadServiceInfo","serviceInfo","resetForms","EmptyMessage","padding","margin","textAlign","fontSize","fontWeight","service","onSelectService","selectedId","join","component","ServiceGrid","components_EmptyMessage_EmptyMessage","Service_ServiceInfo_ServiceInfo","CircleButton","Add_default","Edit_default","Delete_default","visible","marginLeft","ButtonsBar","bottom","right","MyModal","MyStepper","activeStep","completed","getSteps","toConsumableArray","steps","getStepContent","step","totalSteps","isLastStep","completedSteps","allStepsCompleted","handleNext","findIndex","i","handleBack","handleStep","handleComplete","handleReset","onSave","Stepper_default","nonLinear","index","Step_default","StepButton_default","Button_default","buttonsRow","navigationButtons","closeButton","disabled","onAddProperty","onRemoveProperty","serviceActions","onPropertyTitleChanged","onPropertyCodeChanged","serviceProperties","properties","_React$createElement","propertiesContainer","textField","autoFocus","code","clearButton","mini","defineProperty","onTextChanged","field","onResetForm","onUpdate","put","Modal","containers_Stepper_Stepper","Service_ServiceProperties_ServiceProperties","Service","isAddDialogOpen","editServiceHandler","getServiceInfo","openAddDialog","closeAddDialog","onAddButtonClick","getServices","serviceGrid","Service_ServiceGrid_ServiceGrid","Service_ServiceModal_ServiceModal","spacing","UI_ButtonsBar_ButtonsBar","UI_CircleButton_CircleButton","deleteService","guid","delete","ServiceDetails","onGetServiceDetails","match","params","itemDetails","avatar","chips","devices","onLoadDeviceInfo","deviceInfo","device","onSelectDevice","selectedDevice","notSelectedDevice","iconContainer","detailsContainer","DeviceGrid","Device_DeviceInfo_DeviceInfo","desc","display","flexDirection","justifyContent","alignItems","ServiceItem","checked","isSelected","helper","onSelectServiceChanged","deviceActions","DeviceServices_ServiceItem","selectedServices","indexOf","serviceUsers","serviceId","Device_DeviceRegister_DeviceRegister","Device_DeviceServices_DeviceServices","Device","editDeviceHandler","getDeviceInfo","loadDevices","loadServices","deviceGrid","Device_DeviceGrid_DeviceGrid","Device_DeviceModal_DeviceModal","deleteDevice","selectedValue","ReportModal","Service_ServicesSelect_ServicesSelect","onSelectedServiceChanged","getPropsHandler","onFinish","report","setSelectedReport","selectedReport","setSelectedServiceHandler","onTextChangedHandler","REPORT_NAME","backgroundColor","minHeight","cursor","disable","flex","Reports_ReportModal_ReportModal","withRouter","onSetResult","rows","columns","reportActions","console","log","getColumns","Reports_ReportItem_ReportItem","filters","all","from","info","logDate","registerDate","dynamicColumns","property","isExist","serviceData","find","serviceProperty","undefined","col","history","Report","Reports_SimpleReport_SimpleReport","column","row","App","getItem","checkTokenHandler","routes","Switch","Route","path","ReportResult","components_Layout_Layout","instance","create","authAction","Boolean","window","location","hostname","initState","resucer","action","reducer","filter","titleServiceProperties","splice","codeServiceProperties","isIdExist","moment","add","format","reducers","combineReducers","authReducer","serviceReducer","deviceReducer","reportReducer","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","blue","baseURL","ReactDOM","render","es","BrowserRouter","styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p"],"mappings":"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","file":"static/js/main.de159a56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Service__container___2L07Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Report__container___2l3Uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth__container___15m-0\",\"loginPanel\":\"Auth__loginPanel___1k2oI\",\"loginHeader\":\"Auth__loginHeader___2hYXk\",\"loginText\":\"Auth__loginText___2YZ80\",\"domainText\":\"Auth__domainText___koV58\",\"buttonsGrid\":\"Auth__buttonsGrid___2XNpa\",\"errorPanel\":\"Auth__errorPanel___2ZABu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceInfo__container___25NZM\",\"notSelectedService\":\"ServiceInfo__notSelectedService___2KjQJ\",\"selectedService\":\"ServiceInfo__selectedService___23UcK\",\"title\":\"ServiceInfo__title___2bUF5\",\"text\":\"ServiceInfo__text___1l8Ov\",\"icon\":\"ServiceInfo__icon___1RUs9\",\"link\":\"ServiceInfo__link___22Fej\"};","import React from 'react'\r\nimport {TextField} from '@material-ui/core'\r\n\r\nconst MyTextField =(props)=>{\r\n    const style={\r\n        marginBottom:'5px'\r\n        \r\n    }\r\n    return(\r\n        <TextField style={style} {...props} />\r\n    )\r\n}\r\n\r\nexport default MyTextField;","const Aux=(props)=> props.children\r\n\r\nexport default Aux;\r\n","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst setLogin = (token) => {\r\n\r\n    localStorage.setItem('token', token);\r\n    axios.defaults.headers.common['authorization'] = `Bearer ${token}`\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const login = (props) => {\r\n    const user = { username: props.username, password: props.password }\r\n    return dispatch => {\r\n        axios.post('users/Authenticate', user).then(result => {\r\n            dispatch(setLogin(result.data.token));\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n    return dispatch => {\r\n        const instance = axios.create();\r\n        instance.defaults.headers.common['authorization'] = `Bearer ${token}`\r\n        instance.get('users/Refresh').then(result => {\r\n            dispatch(setLogin(result.data.token))\r\n        })\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (filed, value) => {\r\n    return {\r\n        type: actionTypes.AUTH_FIELD_CHANGE,\r\n        filed: filed,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const onRegister = (props) => {\r\n    const user = {\r\n        username: props.username,\r\n        password: props.password,\r\n        name: props.name,\r\n        family: props.family\r\n    }\r\n\r\n    return dispatch => {\r\n        axios.post('users/SignUp', user).then(result => {\r\n            dispatch(setLogin(result.token))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const logOut = () =>\r\n{\r\n    localStorage.removeItem('token');\r\n    return{ type: actionTypes.LOGOUT}\r\n}\r\n\r\n","export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const AUTH_FIELD_CHANGE = 'AUTH_FILED_CHANGE'\r\n\r\nexport const SERVICE_FIELD_CHANGE = 'SERVICE_FIELD_CHANGE'\r\nexport const SERVICE_LOAD_SERVICE = 'SERVICE_LOAD_SERVICE'\r\nexport const SERVICE_ADD_NEW_PROPERTIES = 'SERVICE_ADD_NEW_PROPERTIES'\r\nexport const SERVICE_DELETE_NEW_PROPERTIES = 'SERVICE_DELETE_NEW_PROPERTIES'\r\nexport const SERVICE_PROPERTY_TITLE_CHANGED = 'SERVICE_PROPERTY_TITLE_CHANGED'\r\nexport const SERVICE_PROPERTY_CODE_CHANGED = 'SERVICE_PROPERTY_CODE_CHANGED'\r\nexport const SERVICE_CLEAR_FORMS = 'SERVICE_CLEAR_FORMS'\r\nexport const SERVICE_SELECT_SERVICE = 'SERVICE_SELECT_SERVICE'\r\nexport const SERVICE_DELETE_SERVICE = 'SERVICE_DELETE_SERVICE'\r\nexport const SERVICE_LOAD_SERVICE_INFO = 'SERVICE_LOAD_SERVICE_INFO'\r\n\r\nexport const DEVICE_FIELD_CHANGE = 'DEVICE_FIELD_CHANGE'\r\nexport const DEVICE_LOAD_DEVICES = 'DEVICE_LOAD_DEVICES'\r\nexport const DEVICE_SELECT_DEVICE = 'DEVICE_SELECT_DEVICE'\r\nexport const DEVICE_ON_SELECT_SERVICE = 'DEVICE_ON_SELECT_SERVICE'\r\nexport const DEVICE_CLEAR_FORMS = 'DEVICE_CLEAR_FORMS'\r\nexport const DEVICE_LOAD_DEVICE_INFO = 'DEVICE_LOAD_DEVICE_INFO'\r\n\r\nexport const REPORT_SET_SELECTED_REPORT = 'REPORT_SET_SELECTED_REPORT'\r\nexport const REPORT_SET_SELECTED_SERVICE = 'REPORT_SET_SELECTED_SERVICE'\r\nexport const REPORT_SET_START_DATE = 'REPORT_SET_START_DATE'\r\nexport const REPORT_SET_END_DATE = 'REPORT_SET_END_DATE'\r\nexport const REPORT_FIELD_CHANGE = 'REPORT_FIELD_CHANGE'\r\nexport const REPORT_SET_RESULT = 'REPORT_SET_RESULT'\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Paper, Grid, Button } from '@material-ui/core'\r\nimport TextField from '../../components/UI/TextField/TextField'\r\nimport Aux from '../../utils/Auxilary'\r\nimport classes from './Auth.css'\r\nimport bg from '../../assets/images/bitbird.png'\r\nimport { connect } from 'react-redux'\r\nimport * as authActions from '../../store/actions/auth'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        isInRegisterMode: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.formValidation();\r\n    }\r\n\r\n    formValidation = () => {\r\n        const errors = [];\r\n        if (this.state.isInRegisterMode) {\r\n            if (this.props.password != this.props.rePassword) errors.push('Password & RePassword are not equal.')\r\n            if (this.props.password.length < 5) errors.push('Password must be longer than 5 characters.')\r\n        }\r\n\r\n        this.setState({ errors: errors }, () => errors.length == 0 ? this.actionHandler() : null);\r\n    }\r\n\r\n    toggleRegisterModeHandler = () => this.setState(preState => { return { isInRegisterMode: !preState.isInRegisterMode } })\r\n\r\n    actionHandler = () => {\r\n        if (this.state.isInRegisterMode)\r\n            this.props.onRegister({ ...this.props })\r\n        else\r\n            this.props.onLogin({ ...this.props })\r\n    }\r\n\r\n    render() {\r\n        const style = { backgroundImage: `url(${bg})` }\r\n\r\n        const registerFields = <Aux>\r\n            <TextField required fullWidth type=\"password\" label=\"Re-Password\" name='rePassword' onChange={event => this.props.onFieldChanged(event)} />\r\n            <TextField required fullWidth label=\"Name\" name='name' onChange={event => this.props.onFieldChanged(event)} />\r\n            <TextField required fullWidth label=\"Family\" name='family' onChange={event => this.props.onFieldChanged(event)} />\r\n        </Aux>\r\n\r\n        return (\r\n            <form onSubmit={event => this.onSubmit(event)}>\r\n                <Grid container className={classes.container} >\r\n                    <Grid xs={4} item />\r\n                    <Grid xs={4} item>\r\n                        <Paper className={classes.loginPanel}>\r\n                            <Grid container>\r\n                                <Grid xs={12} item style={style} className={classes.loginHeader} />\r\n                                <Grid xs={12} item className={classes.loginText}><h3>Login</h3></Grid>\r\n                                <Grid xs={12} item className={classes.errorPanel}>\r\n                                    {\r\n                                        this.state.errors.map(error => <span>* {error}<br /></span>)\r\n                                    }\r\n                                </Grid>\r\n                                <TextField required fullWidth label=\"Username\" name=\"username\" onChange={event => this.props.onFieldChanged(event)} />\r\n                                <TextField required type=\"password\" name='password' fullWidth label=\"Password\" onChange={event => this.props.onFieldChanged(event)} />\r\n                                {\r\n                                    this.state.isInRegisterMode ? registerFields : null\r\n                                }\r\n                                <Grid container >\r\n                                    <Grid xs={12} item className={classes.buttonsGrid}>\r\n                                        <Button type='submit' fullWidth variant=\"contained\" color=\"secondary\" >{this.state.isInRegisterMode ? 'Register' : 'Login'}</Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} item className={classes.buttonsGrid}>\r\n                                        <Button onClick={this.toggleRegisterModeHandler} fullWidth color=\"primary\" >{this.state.isInRegisterMode ? 'Login' : 'SignUp'}</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                        <div className={classes.domainText}>BitBird</div>\r\n                    </Grid>\r\n                    <Grid xs={4} item />\r\n                </Grid>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = dispatch => {\r\n    return {\r\n        onLogin: (user) => dispatch(authActions.login(user)),\r\n        onFieldChanged: (event) => dispatch(authActions.onFieldChanged(event.target.name, event.target.value)),\r\n        onRegister: (user) => dispatch(authActions.onRegister(user))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Auth);","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport Aux from './Auxilary'\r\nimport { Snackbar, LinearProgress} from '@material-ui/core'\r\n\r\nconst axiosHandler = (WrappedComponent)=>{\r\n    return class extends Component{\r\n        state={\r\n            isLoading: false,\r\n            error: null\r\n        }\r\n\r\n        componentDidMount(){\r\n           \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ isLoading: true });\r\n                return req;\r\n            }, error => error);\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(response => {\r\n                this.setState({ isLoading: false });\r\n                return response;\r\n\r\n            }\r\n                , error => {\r\n                    let message = error.message;\r\n                    if (error.response != null) {\r\n                        switch (error.response.status) {\r\n                            case 400:\r\n                                //.Net core FluentValidator output to string\r\n                                message = \"Bad Request: \" + Object.entries(error.response.data).map(x => x[1]).map(error => `${error}`);\r\n                                break;\r\n                            case 401:\r\n                                message = \"Incorrect Username or Password!\";\r\n                                break;\r\n                            case 403:\r\n                                message = \"Access Denied!\";\r\n                                break;\r\n                            case 404:\r\n                                message = \"Network Error\";\r\n                                break;\r\n                            case 500:\r\n                                message = \"Oops! Server Error\";\r\n                                break;\r\n                            case 502:\r\n                                message = error.response.data;\r\n                                break;\r\n                            default:\r\n                                message = \"Undefined Erro: \" + error.response;\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    this.setState({ isLoading: false, error: message });\r\n                    return Promise.reject(error);\r\n                });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        render()\r\n        {\r\n            const message=\r\n                <Aux>\r\n                    <span >{this.state.error}</span>\r\n                    {this.state.isLoading ? <LinearProgress style={{width:300}} color=\"secondary\" variant=\"query\" /> : null}\r\n                </Aux>\r\n\r\n            return(\r\n                <Aux>\r\n                    <Snackbar \r\n                        autoHideDuration={3000}\r\n                        onClose={() => this.setState({ error: null })}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        open={this.state.error != null || this.state.isLoading}\r\n                        message={message} />\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default axiosHandler;","import React from 'react'\r\nimport { Grid, Button } from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport classes  from './MenuBar.css'\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport logo from '../../assets/images/bitbird.png'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\nimport ReportIcon from '@material-ui/icons/Poll'\r\nimport DeviceIcon from '@material-ui/icons/Router'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {connect} from 'react-redux'\r\nimport * as authActions from '../../store/actions/auth'\r\n\r\nconst MenuBar =(props)=>{\r\n\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Grid item xs={11}>\r\n                    <Link to='/services'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Services\" icon={<CloudIcon />} />\r\n                    </Link>\r\n                    <Link to='/Devices'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Devices\" icon={<DeviceIcon />} />\r\n                    </Link>\r\n                    <Link to='/Reports'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Reports\" icon={<ReportIcon />} />\r\n                    </Link>\r\n                </Grid>\r\n                <Button color=\"inherit\" onClick={props.onLogout} className={classes.rightLinks}  >Logout</Button>\r\n                <img src={logo} width=\"80\" height=\"80\" />\r\n            </Toolbar>\r\n       </AppBar>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        onLogout : () => dispatch(authActions.logOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(MenuBar);","import React, { Component } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport axiosHandler from '../../utils/axiosHandler'\r\nimport MenuBar from '../MenuBar/MenuBar'\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        \r\n        const menuBar =  this.props.isAuthenticated ? <MenuBar />  : null;\r\n\r\n        return (\r\n            <Grid container>\r\n                {menuBar}\r\n                <Grid item xs={12}>\r\n                    <main>\r\n                        {this.props.children}\r\n                    </main>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { isAuthenticated: state.auth.isAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps)(axiosHandler(Layout));","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\n\r\nconst setAll = (services) => {\r\n    return {\r\n        type: actionTypes.SERVICE_LOAD_SERVICE,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const getAll = () => {\r\n    return dispatch => {\r\n        axios.get('/Services').then(result => {\r\n            dispatch(setAll(result.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const addService = (title, serviceProperties) => {\r\n    const service = {\r\n        title: title,\r\n        serviceProperties: serviceProperties\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.post('/Services', service).then(result => {\r\n                dispatch(getAll())\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const editService = (id, title, serviceProperties) => {\r\n    const service = {\r\n\r\n        title: title,\r\n        serviceProperties: serviceProperties\r\n    }\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.put('/Services/' + id, service).then(result => {\r\n            dispatch(getAll());\r\n            dispatch(resetForms());\r\n            resolve();\r\n\r\n         })\r\n        }\r\n        );\r\n    }\r\n}\r\n\r\nexport const getServiceDetailsById = (id) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get('/Services/'+id).then(result=>{\r\n                dispatch(onLoadServiceInfo(result.data))\r\n                resolve(result.data);\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteService = (guid) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.delete('/Services/' + guid).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const onLoadServiceInfo = (serviceInfo)=>{\r\n    return{\r\n        type: actionTypes.SERVICE_LOAD_SERVICE_INFO,\r\n        serviceInfo: serviceInfo\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const newPropertyHandler = () => {\r\n    return {\r\n        type: actionTypes.SERVICE_ADD_NEW_PROPERTIES\r\n    }\r\n}\r\n\r\nexport const removePropertyHandler = (index) => {\r\n    return {\r\n        type: actionTypes.SERVICE_DELETE_NEW_PROPERTIES,\r\n        index: index\r\n\r\n    }\r\n}\r\n\r\nexport const onPropertyTitleChanged = (index, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_PROPERTY_TITLE_CHANGED,\r\n        index: index,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const onPropertyCodeChanged = (index, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_PROPERTY_CODE_CHANGED,\r\n        index: index,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetForms = () => {\r\n    return {\r\n        type: actionTypes.SERVICE_CLEAR_FORMS\r\n    }\r\n}\r\n\r\nexport const onSelectService = (guid) => {\r\n    return {\r\n        type: actionTypes.SERVICE_SELECT_SERVICE,\r\n        id: guid\r\n    }\r\n}\r\n\r\n\r\n\r\n/*export const addService=(props)=>{\r\n    return dispatch=>{\r\n        axios.post('/services',)\r\n    }\r\n}*/","import React from 'react'\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst EmptyMessage = (props)=>{\r\n\r\n    const style={\r\n        padding:15,\r\n        width:'80%',\r\n        margin: '15px auto',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#888888'\r\n    }\r\n\r\n    return(\r\n        <Paper style={style}>{props.children == null ? 'Nothing is defined!' : props.children}</Paper>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default EmptyMessage;","import React from 'react'\r\nimport { Paper, Typography, Grid } from '@material-ui/core';\r\nimport classes from './ServiceInfo.css'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ServiceInfo = (props) => {\r\n\r\n    return (\r\n        <Grid xs={3} item >\r\n            <Paper \r\n                className={[classes.container, props.service.id === props.selectedId ? classes.selectedService : classes.notSelectedService].join(' ')}\r\n                onClick={()=>props.onSelectService(props.service.id)}>\r\n                <CloudIcon fontSize=\"large\" className={classes.icon} />\r\n                <Typography className={classes.title} variant=\"h5\" component=\"h3\">\r\n                    {props.service.title}\r\n                </Typography>\r\n                <Typography className={classes.text}  component=\"p\">\r\n                    {props.service.id}\r\n                </Typography>\r\n                <br />\r\n                <Link className={classes.link} to={`/Details/${props.service.id}`} >More Details</Link>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onSelectService: (id) => dispatch(serviceActions.onSelectService(id))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceInfo);","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary'\r\nimport EmptyMessage from '../../EmptyMessage/EmptyMessage';\r\nimport ServiceInfo from '../ServiceInfo/ServiceInfo';\r\n\r\nconst ServiceGrid = (props)=>{\r\n    return(\r\n        <Aux>\r\n            {props.services.length==0 ? \r\n                <EmptyMessage /> : \r\n                 props.services.map(service=><ServiceInfo service={service} key={service.id} />)\r\n            }\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default ServiceGrid;","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nconst CircleButton = (props) => {\r\n    let icon = null;\r\n    switch (props.type) {\r\n        default:\r\n        case 'add':\r\n            icon = <AddIcon />\r\n            break;\r\n        case 'edit':\r\n            icon = <EditIcon />\r\n            break;\r\n        case 'delete':\r\n            icon = <DeleteIcon />\r\n            break;\r\n    }\r\n\r\n    const style = {\r\n        marginLeft: 5\r\n    }\r\n\r\n\r\n    return (\r\n        props.visible\r\n            ?\r\n            <Button style={style} variant=\"fab\" {...props} >\r\n                {icon}\r\n            </Button>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default CircleButton;","import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst ButtonsBar = (props)=>{\r\n    const style = {\r\n        position: 'fixed',\r\n        bottom: 50,\r\n        right: 70\r\n    }\r\n    \r\n    return(\r\n        <Grid style={style} xs={12} item>\r\n            {props.children}\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default ButtonsBar;","import React from 'react'\r\nimport { Modal, Paper } from '@material-ui/core';\r\n\r\nconst MyModal = (props)=>{\r\n    const style = {\r\n        width: '30%',\r\n        height: '50%',\r\n        margin: 'auto',\r\n        position: 'absolute'\r\n    }\r\n\r\n    return(\r\n        <Modal style={style} open={props.open}>\r\n            <Paper style={{ padding: 15 }}>\r\n                {props.children}\r\n            </Paper>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default MyModal;","import React, { Component } from 'react'\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Aux from '../../utils/Auxilary'\r\nimport classes from './Stepper.css'\r\n\r\nclass MyStepper extends Component {\r\n    state = {\r\n        activeStep: 0,\r\n        completed: [],\r\n    };\r\n\r\n    getSteps = () => [...this.props.steps]\r\n\r\n    getStepContent = (step) => this.props.children[step]\r\n\r\n    totalSteps = () => this.props.steps.length\r\n\r\n    isLastStep = () => this.state.activeStep === this.totalSteps() - 1;\r\n\r\n    completedSteps = () => [...this.state.completed].length\r\n\r\n    allStepsCompleted = () => this.completedSteps() === this.totalSteps()\r\n\r\n    handleNext = () => {\r\n        let activeStep;\r\n        if (this.isLastStep() && !this.allStepsCompleted()) {\r\n            const steps = this.getSteps();\r\n            activeStep = steps.findIndex((step, i) => !(i in this.state.completed))\r\n        }\r\n        else {\r\n            activeStep = this.state.activeStep + 1;\r\n        }\r\n        this.setState({\r\n            activeStep,\r\n        });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.setState(state => ({\r\n            activeStep: state.activeStep - 1,\r\n        }));\r\n    };\r\n\r\n    handleStep = step => () => {\r\n        this.setState({\r\n            activeStep: step,\r\n        });\r\n    };\r\n\r\n    handleComplete = () => {\r\n        const { completed } = this.state;\r\n        completed[this.state.activeStep] = true;\r\n        this.setState({\r\n            completed,\r\n        });\r\n        this.handleNext();\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            activeStep: 0,\r\n            completed: {},\r\n        });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.isLastStep() ? this.props.onSave() : this.handleComplete();\r\n    }\r\n\r\n    render() {\r\n        const steps = this.getSteps();\r\n        const { activeStep } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Stepper nonLinear activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                            <Step key={label}>\r\n                                <StepButton\r\n                                    onClick={this.handleStep(index)}\r\n                                    completed={this.state.completed[index]}>\r\n                                    {label}\r\n                                </StepButton>\r\n                            </Step>\r\n                        );\r\n                    })}\r\n\r\n                </Stepper>\r\n                <div>\r\n                    {this.allStepsCompleted() ?\r\n\r\n                        <Button onClick={this.handleReset}>Finish</Button>\r\n                        :\r\n                        <div>\r\n                            <form onSubmit={event => this.onSubmit(event)}>{this.getStepContent(activeStep)}\r\n                                <div className={classes.buttonsRow}>\r\n\r\n                                    <div className={classes.navigationButtons}>\r\n                                        <Button\r\n                                            color='primary'\r\n                                            onClick={this.props.onClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className={classes.closeButton}>\r\n                                        <Button\r\n                                            disabled={activeStep === 0}\r\n                                            onClick={this.handleBack}>\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type='submit'>\r\n                                            {this.isLastStep() ? 'Save' : 'Next'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyStepper;","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport { connect } from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport classes from './ServiceProperties.css'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\n\r\nconst ServiceProperties = (props) => {\r\n    return (\r\n        <Aux>\r\n            <div className={classes.container}>\r\n            <div style={{marginBottom:20}}>\r\n                <span>\r\n                    You can define your service properties,title will show in web reports and code use in sending data.\r\n                </span>\r\n            </div>\r\n            \r\n            {props.serviceProperties.map((properties, index) =>\r\n                <div className={classes.propertiesContainer} key={index}>\r\n                    <TextField onChange={(event) => props.onPropertyTitleChanged(index,event.target.value)} className={classes.textField} autoFocus value={properties.title} required label='Property Title' />\r\n                    <TextField onChange={(event) => props.onPropertyCodeChanged(index, event.target.value)}  autoFocus value={properties.code} required label='Property Code' />\r\n                    <Button onClick={()=>props.onRemoveProperty(index)} className={classes.clearButton} mini className={classes.clearButton} color='secondary' variant='outlined'>X</Button>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            </div>\r\n            <Button color='secondary' variant='outlined' fullWidth onClick={props.onAddProperty}><AddIcon /></Button>\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { onAddProperty : () => dispatch(serviceActions.newPropertyHandler()),\r\n             onRemoveProperty : (index) => dispatch(serviceActions.removePropertyHandler(index)),\r\n             onPropertyTitleChanged : (index,value) => dispatch(serviceActions.onPropertyTitleChanged(index,value)),\r\n             onPropertyCodeChanged: (index, value) => dispatch(serviceActions.onPropertyCodeChanged(index, value)) }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceProperties);","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '../../UI/TextField/TextField'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport Stepper from '../../../containers/Stepper/Stepper'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport ServiceProperties from '../ServiceProperties/ServiceProperties';\r\n\r\nconst ServiceModal = (props) => {\r\n\r\n    const saveItemHandler = ()=> props.onSave(props.title, props.serviceProperties).then(()=>{\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    const updateItemHandler = () => props.onUpdate(props.selectedId, props.title, props.serviceProperties).then(()=>{\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n\r\n    return (\r\n        <Modal open={props.open}>\r\n            <Stepper steps={['Service Info', 'Service Properties']} onClose={props.onClose} onSave={props.selectedId==null ? saveItemHandler : updateItemHandler}>\r\n                    <TextField value={props.title} name='title' autoFocus required fullWidth label='Service Title' onChange={event => props.onTextChanged(event)} />\r\n                    <ServiceProperties />\r\n                </Stepper>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return { onTextChanged: (event) => dispatch(serviceActions.onFieldChanged(event.target.name, event.target.value)),\r\n             onSave: (title, serviceProperties) => dispatch(serviceActions.addService(title, serviceProperties)),\r\n             onResetForm: () => dispatch(serviceActions.resetForms()),\r\n             onUpdate: (id, title, serviceProperties) => dispatch(serviceActions.editService(id,title,serviceProperties))}\r\n}\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( ServiceModal);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport classes from './Service.css'\r\nimport { Grid } from '@material-ui/core';\r\nimport ServiceGrid from '../../components/Service/ServiceGrid/ServiceGrid';\r\nimport CircleButton from '../../components/UI/CircleButton/CircleButton';\r\nimport ButtonsBar from '../../components/UI/ButtonsBar/ButtonsBar';\r\nimport ServiceModal from '../../components/Service/ServiceModal/ServiceModal';\r\n\r\nclass Service extends Component {\r\n\r\n    state = {\r\n        isAddDialogOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getServices();\r\n    }\r\n\r\n    editServiceHandler = () => this.props.getServiceInfo(this.props.selectedId).then(this.setState({ isAddDialogOpen: true }))\r\n\r\n    openAddDialog = () => this.setState({ isAddDialogOpen: true })\r\n\r\n    closeAddDialog = () => this.setState({ isAddDialogOpen: false })\r\n\r\n    onAddButtonClick = () => {\r\n        this.props.resetForms();\r\n        this.openAddDialog();\r\n    }\r\n\r\n    render() {\r\n        const serviceGrid = this.props.services == null ? null : <ServiceGrid services={this.props.services} />\r\n\r\n        return (\r\n            <Grid container >\r\n                <ServiceModal open={this.state.isAddDialogOpen} onClose={this.closeAddDialog} />\r\n                <Grid xs={12} item className={classes.container}>\r\n                    <Grid container spacing={16}>\r\n                        {serviceGrid}\r\n                    </Grid>\r\n                </Grid>\r\n                <ButtonsBar>\r\n                    <CircleButton onClick={() => this.props.deleteService(this.props.selectedId)} visible={this.props.selectedId != null} type='delete' color='secondary' />\r\n                    <CircleButton onClick={this.editServiceHandler} visible={this.props.selectedId != null} type='edit' color='secondary' />\r\n                    <CircleButton onClick={this.onAddButtonClick} visible={true} type='add' color='primary' />\r\n                </ButtonsBar>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getServices: () => dispatch(serviceActions.getAll()),\r\n        deleteService: (guid) => dispatch(serviceActions.deleteService(guid)),\r\n        getServiceInfo: (guid) => dispatch(serviceActions.getServiceDetailsById(guid)),\r\n        resetForms: () => dispatch(serviceActions.resetForms())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Service);","import React, { Component } from 'react';\r\nimport { Paper, Typography, Chip, Avatar } from '@material-ui/core';\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { connect } from 'react-redux'\r\nimport classes from './ServiceDetails.css'\r\nimport Aux from '../../../utils/Auxilary';\r\n\r\nclass ServiceDetails extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetServiceDetails(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Paper className={classes.container}>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    {this.props.title}\r\n                </Typography>\r\n                {this.props.match.params.id}\r\n\r\n                <div className={classes.itemDetails}>\r\n                    {this.props.serviceProperties.map(\r\n                        (item, index) => <Chip\r\n                            avatar={<Avatar>{index + 1}</Avatar>}\r\n                            label={`${item.title} - ${item.code}`}\r\n                            color=\"secondary\"\r\n                            className={classes.chips}\r\n\r\n                        />\r\n                    )}\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { onGetServiceDetails: (id) => dispatch(serviceActions.getServiceDetailsById(id)) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceDetails);","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst setAll = (devices) => {\r\n    return {\r\n        type: actionTypes.DEVICE_LOAD_DEVICES,\r\n        devices: devices\r\n    }\r\n}\r\n\r\nexport const getAll = () =>{\r\n    return dispatch => {\r\n        axios.get('/users').then(result=>{\r\n            dispatch(setAll(result.data))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const addDevice = (props) => {\r\n    const device = {\r\n        name: props.title,\r\n        family: props.desc,\r\n        username: props.username,\r\n        password: props.password,\r\n        serviceUsers: props.selectedServices.map(item => ({serviceId: item }))\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.post('/users', device).then(result => {\r\n                dispatch(getAll())\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteDevice = (guid) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.delete('/users/' + guid).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const editDevice = (id, props) => {\r\n    const device = {\r\n        name: props.title,\r\n        family: props.desc,\r\n        username: props.username,\r\n        password: props.password,\r\n        serviceUsers: props.selectedServices.map(item => ({ serviceId: item }))\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.put('/Users/' + id, device).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const getDeviceDetailsById = (id) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get('/users/' + id).then(result => {\r\n                dispatch(onLoadDeviceInfo(result.data))\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const onLoadDeviceInfo = (deviceInfo) => {\r\n    return {\r\n        type: actionTypes.DEVICE_LOAD_DEVICE_INFO,\r\n        deviceInfo: deviceInfo\r\n    }\r\n}\r\n\r\nexport const onSelectServiceChanged = (guid) =>\r\n{\r\n    return{\r\n        type: actionTypes.DEVICE_ON_SELECT_SERVICE,\r\n        id: guid\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.DEVICE_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetForms = () => {\r\n    return {\r\n        type: actionTypes.DEVICE_CLEAR_FORMS\r\n    }\r\n}\r\n\r\nexport const onSelectDevice = guid =>\r\n{\r\n    return{\r\n        type : actionTypes.DEVICE_SELECT_DEVICE,\r\n        id : guid\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Grid, Paper, Typography } from '@material-ui/core'\r\nimport classes from './DeviceInfo.css'\r\nimport DeviceIcon from '@material-ui/icons/Router'\r\nimport * as deviceActions from '../../../store/actions/device'\r\nimport {connect} from 'react-redux'\r\n\r\nconst DeviceInfo = (props) => {\r\n    return (\r\n        <Grid xs={3} item >\r\n            <Paper  \r\n                className={[classes.container, props.device.id === props.selectedId ? classes.selectedDevice : classes.notSelectedDevice].join(' ')}\r\n                onClick={() => props.onSelectDevice(props.device.id)}>\r\n                <div className={classes.iconContainer}>\r\n                    <DeviceIcon style={{ fontSize: 50 }} color='secondary' />\r\n                </div>\r\n                <div className={classes.detailsContainer}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        {props.device.name} \r\n                    </Typography>\r\n                    <Typography variant=\"h6\" >\r\n                        {props.device.family}\r\n                    </Typography>\r\n                    <span>\r\n                        {props.device.username}\r\n                    </span>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectDevice : (id) => dispatch( deviceActions.onSelectDevice(id) )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceInfo);","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary'\r\nimport EmptyMessage from '../../EmptyMessage/EmptyMessage';\r\nimport DeviceInfo from '../DeviceInfo/DeviceInfo'\r\n\r\nconst DeviceGrid = (props) => {\r\n    return(\r\n        <Aux>\r\n            {props.devices.length == 0 ?\r\n                <EmptyMessage /> :\r\n                props.devices.map(device => <DeviceInfo device={device} key={device.id} />)\r\n            }\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default DeviceGrid;","import React from 'react'\r\nimport TextField from '../../UI/TextField/TextField'\r\nimport { connect } from 'react-redux'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceRegister = (props) =>{\r\n    return(\r\n        <div>\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.title}  name='title' required label='Title' fullWidth/>\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.desc} name='desc' required label='Desc' fullWidth />\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.username}  name='username' required label='Username' fullWidth />\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.password} name='password' required={props.selectedId == null}  label='Password' fullWidth type='password'/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTextChanged: (event) => dispatch(deviceActions.onFieldChanged(event.target.name, event.target.value))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceRegister);","import React from 'react'\r\nimport { Paper } from '@material-ui/core';\r\nimport { FormControlLabel, Switch } from '@material-ui/core'\r\n\r\nconst ServiceItem = (props) => {\r\n    return (\r\n\r\n        <Paper style={style.container}>\r\n            <label>\r\n                {props.service.title}\r\n            </label>\r\n            <Switch color='secondary' onChange={() => props.onChange(props.service.id)} checked={props.isSelected} value={props.service.id} />\r\n        </Paper>\r\n    )\r\n}\r\nconst style = {\r\n    container: {\r\n        margin: 10,\r\n        padding: 5,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n\r\n    }\r\n}\r\n\r\nexport default ServiceItem;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ServiceItem from './ServiceItem'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceServices = (props) => {\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            <div style={style.helper}>\r\n                <span>Select this device accessible services.</span>\r\n            </div>\r\n            {props.services == null\r\n                ? null :\r\n                props.services.map(service => <ServiceItem\r\n                    onChange={props.onSelectServiceChanged}\r\n                    isSelected={props.selectedServices.indexOf(service.id) != -1}\r\n                    service={service}\r\n                    key={service.id} />)}\r\n\r\n        </div>\r\n    )\r\n}\r\nconst style={\r\n    container:{\r\n        margin:10\r\n    },\r\n    helper:{\r\n        textAlign: 'center', padding: 5 \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectServiceChanged: (guid) => dispatch(deviceActions.onSelectServiceChanged(guid))\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service, ...state.device })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceServices);","import React from 'react'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport Stepper from '../../../containers/Stepper/Stepper'\r\nimport DeviceRegister from '../DeviceRegister/DeviceRegister'\r\nimport DeviceServices from '../DeviceServices/DeviceServices';\r\nimport {connect} from 'react-redux'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceModal = (props) =>\r\n{\r\n    const saveItemHandler = () => props.onSave({...props}).then(() => {\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    const updateItemHandler = () => props.onUpdate(props.selectedId, {...props}).then(() => {\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    return(\r\n        <Modal open={props.open}>\r\n            <Stepper steps={['Device Info', 'Service Accessibility']} onClose={props.onClose} onSave={props.selectedId == null ? saveItemHandler : updateItemHandler}>\r\n                <DeviceRegister />\r\n                <DeviceServices />\r\n            </Stepper>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onSave : (props) => dispatch(deviceActions.addDevice(props)),\r\n        onResetForm : () => dispatch(deviceActions.resetForms()),\r\n        onUpdate : (id,props) => dispatch(deviceActions.editDevice(id,props))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceModal);","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as deviceActions from '../../store/actions/device'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport DeviceGrid from '../../components/Device/DeviceGrid/DeviceGrid';\r\nimport { Grid} from '@material-ui/core'\r\nimport ButtonsBar from '../../components/UI/ButtonsBar/ButtonsBar'\r\nimport CircleButton from '../../components/UI/CircleButton/CircleButton'\r\nimport DeviceModal from '../../components/Device/DeviceModal/DeviceModal'\r\n\r\nclass Device extends Component{\r\n\r\n    state = {\r\n        isAddDialogOpen: false\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.props.loadDevices();\r\n        this.props.loadServices();\r\n    }\r\n\r\n    editDeviceHandler = () => this.props.getDeviceInfo(this.props.selectedId).then(this.openAddDialog())\r\n\r\n    openAddDialog = () => this.setState({ isAddDialogOpen: true });\r\n\r\n    closeAddDialog = () => this.setState({ isAddDialogOpen: false });\r\n    \r\n\r\n    render(){\r\n        const deviceGrid = this.props.devices == null ? null : <DeviceGrid devices={this.props.devices} />\r\n\r\n        return(\r\n            <Grid container >\r\n                <DeviceModal open={this.state.isAddDialogOpen} onClose={this.closeAddDialog} />\r\n                <Grid xs={12} item style={{padding:20,height:'80%'}}>\r\n                    <Grid container spacing={16}>\r\n                        {deviceGrid}\r\n                    </Grid>\r\n                </Grid>\r\n                <ButtonsBar>\r\n                    <CircleButton onClick={() => this.props.deleteDevice(this.props.selectedId)} visible={this.props.selectedId != null} type='delete' color='secondary' />\r\n                    <CircleButton onClick={this.editDeviceHandler} visible={this.props.selectedId != null} type='edit' color='secondary' />\r\n                    <CircleButton onClick={this.openAddDialog} visible={true} type='add' color='primary' />\r\n                </ButtonsBar>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        loadDevices : () => dispatch(deviceActions.getAll()),\r\n        loadServices : () => dispatch(serviceActions.getAll()),\r\n        deleteDevice : (id) => dispatch(deviceActions.deleteDevice(id)),\r\n        getDeviceInfo: (guid) => dispatch(deviceActions.getDeviceDetailsById(guid)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( Device);","import React from 'react'\r\nimport { Select, MenuItem} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\n\r\nconst ServicesSelect = (props) =>{\r\n    return(\r\n        <Select  fullWidth\r\n            value={props.selectedValue} \r\n            onChange={event => props.onChange(event.target.value)}>\r\n            {props.services.map(service => <MenuItem key={service.id} value={service.id}>{service.title}</MenuItem>)}\r\n            \r\n        </Select>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps)(ServicesSelect);","import React from 'react'\r\nimport { Typography,  TextField, FormControl, Button } from '@material-ui/core'\r\nimport moment from 'moment'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport ServicesSelect from '../../Service/ServicesSelect/ServicesSelect';\r\n\r\nconst ReportModal = (props) =>\r\n{\r\n    return(\r\n        <Modal open={props.open}>\r\n            <FormControl fullWidth>\r\n                <div style={style.container}> \r\n                    <Typography color='secondary' variant=\"h6\" >\r\n                    {props.title}\r\n                    </Typography>\r\n                </div>\r\n                <br />\r\n                <span>Select Service:</span>\r\n                <ServicesSelect selectedValue={props.selectedService} onChange={props.onSelectedServiceChanged} />\r\n                <br />\r\n                <TextField onChange={event => props.onTextChanged(event)} name='from' label='Select Start Date' type='datetime-local' value={props.getPropsHandler('from')} />\r\n                <br />\r\n                <TextField onChange={event => props.onTextChanged(event)} name='to' label='Select End Date' type='datetime-local' value={props.getPropsHandler('to')} />\r\n                <br />\r\n                <div style={style.buttonsRow}>\r\n                    \r\n                    <Button onClick={props.onClose} color='primary'> Close</Button>\r\n                    <Button onClick={props.onFinish} variant='contained' color='primary'> Finish</Button>\r\n\r\n                </div>\r\n            </FormControl>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nconst style={\r\n    container:{\r\n        textAlign: 'center',\r\n        margin:5\r\n    }\r\n    ,\r\n    buttonsRow: {\r\n        textAlign: 'right'\r\n    }\r\n}\r\n\r\nexport default ReportModal;","import React from 'react'\r\nimport { Typography, Paper } from '@material-ui/core'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport {connect} from 'react-redux'\r\nimport * as reportActions from '../../../store/actions/report'\r\nimport ReportModal from '../ReportModal/ReportModal';\r\n\r\nconst ReportItem = (props) => {\r\n\r\n    const REPORT_NAME = props.name;\r\n    \r\n    const style = {\r\n        padding: 10,\r\n        backgroundColor: props.color,\r\n        minHeight: 150,\r\n        cursor: props.disable ? 'cursor' : 'pointer',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        display: 'flex',\r\n        color: '#ffffff',\r\n        flexDirection:'column'\r\n    }\r\n\r\n    const onFinishHandler = () =>\r\n    {\r\n        props.setSelectedReport('');\r\n        props.onFinish();\r\n    }\r\n\r\n    const getPropsHandler = field => props[field]\r\n\r\n    \r\n    return (\r\n        <Aux>\r\n            <Paper style={style} onClick={!props.disable ? ()=>props.setSelectedReport(REPORT_NAME) : null}>\r\n                <Typography color='inherit' variant=\"h4\" >\r\n                    {props.title}\r\n                </Typography>\r\n                \r\n                {props.disable ? <span >(disabled)</span> :  null}\r\n\r\n            </Paper>\r\n            <ReportModal \r\n                title={props.title} \r\n                open={props.selectedReport == REPORT_NAME}\r\n                selectedService={props.selectedService} \r\n                onSelectedServiceChanged={props.setSelectedServiceHandler}\r\n                onClose={()=>props.setSelectedReport('')}\r\n                onTextChanged = {props.onTextChangedHandler}\r\n                onFinish={()=>onFinishHandler()}\r\n                getPropsHandler={getPropsHandler} /> \r\n           \r\n        </Aux>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({...state.report})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return{\r\n        setSelectedReport : (report) => dispatch(reportActions.setSelectedReport(report)),\r\n        setSelectedServiceHandler : (service) => dispatch(reportActions.setSelectedService(service)),\r\n        onTextChangedHandler : (event) => dispatch(reportActions.onFieldChanged(event.target.name,event.target.value))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportItem);","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const setSelectedService = (selectedService) =>\r\n{\r\n    return{\r\n        type: actionTypes.REPORT_SET_SELECTED_SERVICE,\r\n        selectedService : selectedService\r\n    }\r\n}\r\n\r\nexport const setSelectedReport = (selectedReport) =>\r\n{\r\n    return {\r\n        type: actionTypes.REPORT_SET_SELECTED_REPORT,\r\n        selectedReport : selectedReport\r\n    }\r\n}\r\n\r\nexport const getData = (guid,filters) =>\r\n{\r\n   // return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get(`/Data/${guid}?${filters}`).then(result => {\r\n                resolve(result.data);\r\n            })\r\n        }\r\n        )\r\n  //  }\r\n}\r\n\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.REPORT_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setReportResult = (rows,columns) =>\r\n{\r\n    return{\r\n        type: actionTypes.REPORT_SET_RESULT,\r\n        rows: rows,\r\n        columns: columns\r\n    }\r\n}\r\n\r\n","import * as reportActions from '../../../store/actions/report'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReportItem from '../ReportItem/ReportItem'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst SimpleReport = (props) => {\r\n\r\n    console.log('simpleReport',props)\r\n    const onFinish = () => {\r\n        Promise.all(\r\n            [reportActions.getData(props.selectedService, `from=${props.from}&to=${props.to}`),getColumns()]\r\n            ).then(result => {\r\n                const rows = []\r\n                const serviceProperties = [...result[1].serviceProperties];\r\n\r\n                /*\r\n                It may sedbem confusing!\r\n                imagine that you have a service with 10 columns.\r\n                your device may send data for all of them or may be just for one or two.\r\n                tour raw data its something like this:\r\n                    {logDate: ----,\r\n                    registerData:---,\r\n                    serviceData: \r\n                        [\r\n                            data: '-----',\r\n                            code: '-----',\r\n                            serviceProperty:{\r\n                                id: '-----',\r\n                                code: '-----',\r\n                                title: '-----\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                so what we do here is convert this rows to columns and insert each data in its related column.\r\n                */\r\n\r\n                result[0].map((log, index) => {\r\n                    const info = [index + 1, log.logDate, log.registerDate]\r\n                    const dynamicColumns = [...serviceProperties].map(property => { const isExist = log.serviceData.find(data => data.serviceProperty.id === property.id); return isExist == undefined ? '--' : isExist.data })\r\n                    rows.push(info.concat(dynamicColumns))\r\n                })\r\n\r\n                props.onSetResult(rows, ['#', 'Log Date', 'Register Date', ...serviceProperties.map(col => col.title)]);\r\n\r\n                props.history.push(`ReportResult/${props.selectedService}`)\r\n            })\r\n\r\n    }\r\n\r\n    const getColumns = () => {\r\n        return new Promise(resolve => {\r\n            props.getServiceInfo(props.selectedService).then(result => resolve(result))\r\n        }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <ReportItem onFinish={onFinish} title='Simple Report' color='#00e5ff' name='SIMPLE_REPORT' />\r\n        </Aux>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.report })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetResult: (rows, columns) => dispatch(reportActions.setReportResult(rows, columns)),\r\n        getServiceInfo: (id) => dispatch(serviceActions.getServiceDetailsById(id)),\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SimpleReport));\r\n\r\n","import React , {Component} from 'react'\r\nimport {Grid, Button} from '@material-ui/core'\r\nimport ReportItem from '../../components/Reports/ReportItem/ReportItem';\r\nimport classes from './Report.css'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport SimpleReport from '../../components/Reports/SimpleReport/SimpleReport'\r\n\r\nclass Report extends Component{\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.loadServices();\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <div className={classes.container} >\r\n                <Grid container spacing={32}>\r\n                    <Grid item xs={3}>\r\n                        <SimpleReport title='Simple Report' color='#00e5ff' name='SIMPLE_REPORT' />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <ReportItem disable title='Log Report' color='#ff3d00' name='LOG_REPORT' />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return{\r\n        loadServices : () => dispatch(serviceActions.getAll())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.report})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Report);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nconst ReportResult = (props) => {\r\n\r\n    const serviceId = props.match.params.serviceId;\r\n    const style={\r\n        container:{\r\n            padding: 20\r\n        }\r\n    }\r\n    return (\r\n        <div style={style.container}>\r\n        <Paper>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.columns.map((column, index) => <TableCell key={index}>{column}</TableCell>)}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.rows.map((row, index) =>\r\n                        <TableRow key={index}>\r\n                            {row.map((col, index) => <TableCell key={index}> {col}</TableCell>)}\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.report })\r\n\r\nexport default connect(mapStateToProps)(ReportResult);","import React, { Component } from 'react';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Layout from './components/Layout/Layout'\r\nimport classes from './App.css'\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom'\r\nimport Service from './containers/Service/Service';\r\nimport Axios from 'axios';\r\nimport * as authAction from './store/actions/auth'\r\nimport {connect} from 'react-redux'\r\nimport ServiceDetails from './components/Service/ServiceDetails/ServiceDetails'\r\nimport Device from './containers/Device/Device'\r\nimport Report from './containers/Report/Report'\r\nimport ReportResult from './components/Reports/ReportResult/ReportResult'\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount(){\r\n    if (localStorage.getItem('token') != null)\r\n      this.props.checkTokenHandler(localStorage.getItem('token'));\r\n  }\r\n  \r\n  render() {\r\n\r\n   \r\n\r\n    const routes = this.props.isAuthenticated ? \r\n      <Switch>\r\n        <Route path=\"/Details/:id\" component={ServiceDetails} />\r\n        <Route path=\"/Devices\" component={Device} />\r\n        <Route path=\"/ReportResult/:serviceId\" component={ReportResult} />\r\n        <Route path=\"/Reports\" component={Report} />\r\n        <Route path=\"/\" component={Service} />\r\n      </Switch>\r\n      :\r\n      <Switch>\r\n        <Route path=\"/\" component={Auth} />\r\n      </Switch>\r\n    \r\n    return (\r\n      <Layout>\r\n        {routes}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n  return { isAuthenticated : state.auth.isAuthenticated}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    checkTokenHandler : (token) => dispatch(authAction.checkToken(token))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState = {\r\n    isAuthenticated: false,\r\n    token: null,\r\n    username: '',\r\n    password: '',\r\n    rePassword: '',\r\n    name: '',\r\n    family: '',\r\n\r\n};\r\n\r\nconst resucer = (state = initState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.LOGIN:\r\n            return {...state,isAuthenticated:true,token:action.token}\r\n        case actionTypes.AUTH_FIELD_CHANGE:\r\n            return {...state,[action.filed]:action.value}\r\n        case actionTypes.LOGOUT:\r\n            return {...initState}\r\n        default :\r\n            return state;            \r\n    }\r\n}\r\n\r\nexport default resucer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState={\r\n    services: null,\r\n    title:'',\r\n    serviceProperties: [{id:null, title: '', code: ''}],\r\n    selectedId: null\r\n    \r\n}\r\n\r\nconst reducer = (state = initState,action)=>{\r\n    \r\n    switch(action.type)\r\n    {\r\n        case actionTypes.SERVICE_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n            \r\n        case actionTypes.SERVICE_LOAD_SERVICE:\r\n            return { ...state, services: action.services }\r\n\r\n        case actionTypes.SERVICE_ADD_NEW_PROPERTIES:\r\n            return {...state,serviceProperties: [...state.serviceProperties].concat({id: null,title: '' ,code: ''})}\r\n\r\n        case actionTypes.SERVICE_DELETE_NEW_PROPERTIES:\r\n            return {...state,serviceProperties:[...state.serviceProperties].filter((x,index)=> index!=action.index)}\r\n\r\n        case actionTypes.SERVICE_PROPERTY_TITLE_CHANGED:\r\n            const titleServiceProperties = [...state.serviceProperties];\r\n            titleServiceProperties.splice(action.index, 1, { id: titleServiceProperties[action.index].id, title: action.value, code: titleServiceProperties[action.index].code})\r\n            return { ...state, serviceProperties: titleServiceProperties }\r\n\r\n        case actionTypes.SERVICE_PROPERTY_CODE_CHANGED:\r\n            const codeServiceProperties = [...state.serviceProperties];\r\n            codeServiceProperties.splice(action.index, 1, { id: codeServiceProperties[action.index].id ,code: action.value, title: codeServiceProperties[action.index].title })\r\n            return { ...state, serviceProperties: codeServiceProperties }\r\n        \r\n        case actionTypes.SERVICE_CLEAR_FORMS:\r\n            return { ...initState, services: state.services};\r\n\r\n        case actionTypes.SERVICE_SELECT_SERVICE:\r\n            return { ...state, selectedId: action.id == state.selectedId ? null : action.id}\r\n\r\n        case actionTypes.SERVICE_LOAD_SERVICE_INFO:\r\n            const service = action.serviceInfo;    \r\n            return { ...state,title: service.title, serviceProperties: service.serviceProperties}\r\n        \r\n        default:\r\n            return state; \r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState = {\r\n    devices: null,\r\n    selectedId: null,\r\n    title: '',\r\n    desc: '',\r\n    username: '',\r\n    password: '',\r\n    selectedServices: []\r\n    \r\n}\r\n\r\nconst reducer = ( state = initState , action ) =>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.DEVICE_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n\r\n        case actionTypes.DEVICE_LOAD_DEVICES:\r\n            return {...state,devices: action.devices}\r\n\r\n        case actionTypes.DEVICE_SELECT_DEVICE:\r\n            return {...state,selectedId: state.selectedId == action.id ? null : action.id }\r\n\r\n        case actionTypes.DEVICE_ON_SELECT_SERVICE:\r\n            const serviceId = action.id;\r\n            const isIdExist = state.selectedServices.indexOf(serviceId)!=-1;\r\n            return{ ...state, \r\n                selectedServices: isIdExist ? state.selectedServices.filter(id => id != serviceId) : state.selectedServices.concat(serviceId)}\r\n\r\n        case actionTypes.DEVICE_CLEAR_FORMS:\r\n            return { ...initState, devices: state.devices };\r\n\r\n        case actionTypes.DEVICE_LOAD_DEVICE_INFO:\r\n            const device = action.deviceInfo;\r\n            return { ...state, title: device.name,\r\n                        desc: device.family,\r\n                        username: device.username,\r\n                        selectedServices: device.serviceUsers.map(service => service.serviceId) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport moment from 'moment'\r\n\r\nconst initState ={\r\n    selectedReport: '',\r\n    selectedService: '',\r\n    from: moment().add(-1, 'days').format('YYYY-MM-DDT00:00'),\r\n    to: moment().format('YYYY-MM-DDT23:59'),\r\n    rows: [],\r\n    columns: []\r\n\r\n}\r\n\r\nconst reducer = (state = initState , action) =>\r\n{\r\n    switch(action.type){\r\n        \r\n        case actionTypes.REPORT_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n\r\n        case actionTypes.REPORT_SET_SELECTED_REPORT:\r\n            return {...state,selectedReport : action.selectedReport}\r\n\r\n        case actionTypes.REPORT_SET_SELECTED_SERVICE:\r\n            return {...state,selectedService : action.selectedService}\r\n\r\n        case actionTypes.REPORT_SET_RESULT:\r\n            return { ...state, rows: action.rows , columns: action.columns}\r\n\r\n        \r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {applyMiddleware,createStore,combineReducers} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport authReducer from './store/reducers/auth'\r\nimport serviceReducer from './store/reducers/service'\r\nimport deviceReducer from './store/reducers/device'\r\nimport reportReducer from './store/reducers/report'\r\nimport thunk from 'redux-thunk'\r\nimport axios from 'axios'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\n\r\nconst reducers = combineReducers(\r\n    { auth: authReducer, \r\n      service: serviceReducer,\r\n      device: deviceReducer,\r\n      report: reportReducer}\r\n    );\r\nconst store=createStore(reducers, applyMiddleware(thunk));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n});\r\n\r\naxios.defaults.baseURL=\"http://localhost:33213/api/\";\r\n\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><MuiThemeProvider theme={theme}><App /></MuiThemeProvider></BrowserRouter></Provider> , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceProperties__container___18vJ3\",\"propertiesContainer\":\"ServiceProperties__propertiesContainer___1UxNg\",\"textField\":\"ServiceProperties__textField___1xReR\",\"clearButton\":\"ServiceProperties__clearButton___2ja3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DeviceInfo__container___2lvJD\",\"iconContainer\":\"DeviceInfo__iconContainer___2aqsj\",\"detailsContainer\":\"DeviceInfo__detailsContainer___3gAy0\",\"selectedDevice\":\"DeviceInfo__selectedDevice___3vDJE\",\"notSelectedDevice\":\"DeviceInfo__notSelectedDevice___15S6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuBar__container___3Ku8t\",\"selectedLinks\":\"MenuBar__selectedLinks___PLiE8\",\"rightLinks\":\"MenuBar__rightLinks___1bFoP\"};","module.exports = __webpack_public_path__ + \"static/media/bitbird.b83e038b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsRow\":\"Stepper__buttonsRow___2YVqK\",\"navigationButtons\":\"Stepper__navigationButtons___h_TJL\",\"closeButton\":\"Stepper__closeButton___y_FzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceDetails__container___W0Z-9\",\"itemDetails\":\"ServiceDetails__itemDetails___3Lg2R\",\"chips\":\"ServiceDetails__chips___1Wvh0\"};"],"sourceRoot":""}