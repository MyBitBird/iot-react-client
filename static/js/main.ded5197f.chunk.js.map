{"version":3,"sources":["containers/Service/Service.css","containers/Report/Report.css","containers/Auth/Auth.css","components/Service/ServiceInfo/ServiceInfo.css","components/UI/TextField/TextField.js","utils/Auxilary.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Auth/Auth.js","utils/axiosHandler.js","components/MenuBar/MenuBar.js","components/Layout/Layout.js","store/actions/service.js","components/EmptyMessage/EmptyMessage.js","components/Service/ServiceInfo/ServiceInfo.js","components/Service/ServiceGrid/ServiceGrid.js","components/UI/CircleButton/CircleButton.js","components/UI/ButtonsBar/ButtonsBar.js","components/UI/Modal/Modal.js","containers/Stepper/Stepper.js","components/Service/ServiceProperties/ServiceProperties.js","components/Service/ServiceModal/ServiceModal.js","containers/Service/Service.js","components/Service/ServiceDetails/ServiceDetails.js","store/actions/device.js","components/Device/DeviceInfo/DeviceInfo.js","components/Device/DeviceGrid/DeviceGrid.js","components/Device/DeviceRegister/DeviceRegister.js","components/Device/DeviceServices/ServiceItem.js","components/Device/DeviceServices/DeviceServices.js","components/Device/DeviceModal/DeviceModal.js","containers/Device/Device.js","components/Service/ServicesSelect/ServicesSelect.js","components/Reports/ReportModal/ReportModal.js","components/Reports/ReportItem/ReportItem.js","store/actions/report.js","components/Reports/SimpleReport/SimpleReport.js","containers/Report/Report.js","components/Reports/ReportResult/ReportResult.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/service.js","store/reducers/device.js","store/reducers/report.js","index.js","components/Service/ServiceProperties/ServiceProperties.css","components/Device/DeviceInfo/DeviceInfo.css","components/MenuBar/MenuBar.css","assets/images/bitbird.png","containers/Stepper/Stepper.css","components/Service/ServiceDetails/ServiceDetails.css"],"names":["module","exports","container","loginPanel","loginHeader","loginText","domainText","buttonsGrid","errorPanel","notSelectedService","selectedService","title","text","icon","link","MyTextField","props","react_default","a","createElement","index_es","Object","assign","style","marginBottom","Aux","children","setLogin","token","type","Auth","state","isInRegisterMode","errors","onSubmit","event","preventDefault","_this","formValidation","password","rePassword","push","length","setState","actionHandler","toggleRegisterModeHandler","preState","onRegister","objectSpread","onLogin","_this2","this","backgroundImage","concat","bg","registerFields","Auxilary","TextField","required","fullWidth","label","name","onChange","onFieldChanged","className","classes","md","xs","item","map","error","value","username","variant","color","onClick","Component","connect","auth","dispatch","user","axios","get","then","result","data","filed","target","family","post","authActions","axiosHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isLoading","inherits","createClass","key","reqInterceptor","interceptors","request","use","req","resInterceptor","response","message","status","entries","x","Promise","reject","eject","_this3","width","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","open","onLogout","localStorage","removeItem","AppBar_default","position","Toolbar_default","Link","to","BottomNavigationAction_default","selectedLinks","showLabel","Cloud_default","Router_default","Poll_default","rightLinks","src","logo","height","Layout","menuBar","isAuthenticated","components_MenuBar_MenuBar","getAll","services","getServiceDetailsById","id","resolve","console","log","onLoadServiceInfo","serviceInfo","resetForms","EmptyMessage","padding","margin","textAlign","fontSize","fontWeight","service","onSelectService","selectedId","join","component","ServiceGrid","components_EmptyMessage_EmptyMessage","Service_ServiceInfo_ServiceInfo","CircleButton","Add_default","Edit_default","Delete_default","visible","marginLeft","ButtonsBar","bottom","right","MyModal","MyStepper","activeStep","completed","getSteps","toConsumableArray","steps","getStepContent","step","totalSteps","isLastStep","completedSteps","allStepsCompleted","handleNext","findIndex","i","handleBack","handleStep","handleComplete","handleReset","onSave","Stepper_default","nonLinear","index","Step_default","StepButton_default","Button_default","buttonsRow","navigationButtons","closeButton","disabled","onAddProperty","onRemoveProperty","serviceActions","onPropertyTitleChanged","onPropertyCodeChanged","serviceProperties","properties","_React$createElement","propertiesContainer","textField","autoFocus","code","clearButton","mini","defineProperty","onTextChanged","field","onResetForm","onUpdate","put","Modal","containers_Stepper_Stepper","Service_ServiceProperties_ServiceProperties","Service","isAddDialogOpen","editServiceHandler","getServiceInfo","openAddDialog","closeAddDialog","onAddButtonClick","getServices","serviceGrid","Service_ServiceGrid_ServiceGrid","Service_ServiceModal_ServiceModal","spacing","UI_ButtonsBar_ButtonsBar","UI_CircleButton_CircleButton","deleteService","guid","delete","ServiceDetails","onGetServiceDetails","match","params","itemDetails","avatar","chips","devices","onLoadDeviceInfo","deviceInfo","device","onSelectDevice","selectedDevice","notSelectedDevice","iconContainer","detailsContainer","DeviceGrid","Device_DeviceInfo_DeviceInfo","desc","display","flexDirection","justifyContent","alignItems","ServiceItem","checked","isSelected","helper","onSelectServiceChanged","deviceActions","DeviceServices_ServiceItem","selectedServices","indexOf","serviceUsers","serviceId","Device_DeviceRegister_DeviceRegister","Device_DeviceServices_DeviceServices","Device","editDeviceHandler","getDeviceInfo","loadDevices","loadServices","deviceGrid","Device_DeviceGrid_DeviceGrid","Device_DeviceModal_DeviceModal","deleteDevice","selectedValue","ReportModal","Service_ServicesSelect_ServicesSelect","onSelectedServiceChanged","getPropsHandler","onFinish","report","setSelectedReport","selectedReport","setSelectedServiceHandler","onTextChangedHandler","REPORT_NAME","backgroundColor","minHeight","cursor","disable","flex","Reports_ReportModal_ReportModal","withRouter","onSetResult","rows","columns","reportActions","getColumns","Reports_ReportItem_ReportItem","filters","all","from","info","logDate","registerDate","dynamicColumns","property","isExist","serviceData","find","serviceProperty","undefined","col","history","Report","Reports_SimpleReport_SimpleReport","column","row","App","getItem","checkTokenHandler","routes","Switch","Route","path","ReportResult","components_Layout_Layout","instance","create","defaults","headers","common","authAction","Boolean","window","location","hostname","initState","resucer","action","reducer","filter","titleServiceProperties","splice","codeServiceProperties","isIdExist","moment","add","format","reducers","combineReducers","authReducer","serviceReducer","deviceReducer","reportReducer","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","blue","baseURL","ReactDOM","render","es","BrowserRouter","styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ded5197f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Service__container___2L07Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Report__container___2l3Uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth__container___15m-0\",\"loginPanel\":\"Auth__loginPanel___1k2oI\",\"loginHeader\":\"Auth__loginHeader___2hYXk\",\"loginText\":\"Auth__loginText___2YZ80\",\"domainText\":\"Auth__domainText___koV58\",\"buttonsGrid\":\"Auth__buttonsGrid___2XNpa\",\"errorPanel\":\"Auth__errorPanel___2ZABu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceInfo__container___25NZM\",\"notSelectedService\":\"ServiceInfo__notSelectedService___2KjQJ\",\"selectedService\":\"ServiceInfo__selectedService___23UcK\",\"title\":\"ServiceInfo__title___2bUF5\",\"text\":\"ServiceInfo__text___1l8Ov\",\"icon\":\"ServiceInfo__icon___1RUs9\",\"link\":\"ServiceInfo__link___22Fej\"};","import React from 'react'\r\nimport {TextField} from '@material-ui/core'\r\n\r\nconst MyTextField =(props)=>{\r\n    const style={\r\n        marginBottom:'5px'\r\n        \r\n    }\r\n    return(\r\n        <TextField style={style} {...props} />\r\n    )\r\n}\r\n\r\nexport default MyTextField;","const Aux=(props)=> props.children\r\n\r\nexport default Aux;\r\n","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst setLogin = (token) => {\r\n\r\n    //localStorage.setItem('token', token);\r\n   // axios.defaults.headers.common['authorization'] = `Bearer ${token}`\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const login = (props) => {\r\n    const user = { username: props.username, password: props.password }\r\n    return dispatch => {\r\n        axios.get('Users').then(result => {\r\n            dispatch(setLogin(result.data.token));\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n    return dispatch => {\r\n        const instance = axios.create();\r\n        instance.defaults.headers.common['authorization'] = `Bearer ${token}`\r\n        instance.get('users/Refresh').then(result => {\r\n            dispatch(setLogin(result.data.token))\r\n        })\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (filed, value) => {\r\n    return {\r\n        type: actionTypes.AUTH_FIELD_CHANGE,\r\n        filed: filed,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const onRegister = (props) => {\r\n    const user = {\r\n        username: props.username,\r\n        password: props.password,\r\n        name: props.name,\r\n        family: props.family\r\n    }\r\n\r\n    return dispatch => {\r\n        axios.post('users/SignUp', user).then(result => {\r\n            dispatch(setLogin(result.token))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const logOut = () =>\r\n{\r\n    localStorage.removeItem('token');\r\n    return{ type: actionTypes.LOGOUT}\r\n}\r\n\r\n","export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const AUTH_FIELD_CHANGE = 'AUTH_FILED_CHANGE'\r\n\r\nexport const SERVICE_FIELD_CHANGE = 'SERVICE_FIELD_CHANGE'\r\nexport const SERVICE_LOAD_SERVICE = 'SERVICE_LOAD_SERVICE'\r\nexport const SERVICE_ADD_NEW_PROPERTIES = 'SERVICE_ADD_NEW_PROPERTIES'\r\nexport const SERVICE_DELETE_NEW_PROPERTIES = 'SERVICE_DELETE_NEW_PROPERTIES'\r\nexport const SERVICE_PROPERTY_TITLE_CHANGED = 'SERVICE_PROPERTY_TITLE_CHANGED'\r\nexport const SERVICE_PROPERTY_CODE_CHANGED = 'SERVICE_PROPERTY_CODE_CHANGED'\r\nexport const SERVICE_CLEAR_FORMS = 'SERVICE_CLEAR_FORMS'\r\nexport const SERVICE_SELECT_SERVICE = 'SERVICE_SELECT_SERVICE'\r\nexport const SERVICE_DELETE_SERVICE = 'SERVICE_DELETE_SERVICE'\r\nexport const SERVICE_LOAD_SERVICE_INFO = 'SERVICE_LOAD_SERVICE_INFO'\r\n\r\nexport const DEVICE_FIELD_CHANGE = 'DEVICE_FIELD_CHANGE'\r\nexport const DEVICE_LOAD_DEVICES = 'DEVICE_LOAD_DEVICES'\r\nexport const DEVICE_SELECT_DEVICE = 'DEVICE_SELECT_DEVICE'\r\nexport const DEVICE_ON_SELECT_SERVICE = 'DEVICE_ON_SELECT_SERVICE'\r\nexport const DEVICE_CLEAR_FORMS = 'DEVICE_CLEAR_FORMS'\r\nexport const DEVICE_LOAD_DEVICE_INFO = 'DEVICE_LOAD_DEVICE_INFO'\r\n\r\nexport const REPORT_SET_SELECTED_REPORT = 'REPORT_SET_SELECTED_REPORT'\r\nexport const REPORT_SET_SELECTED_SERVICE = 'REPORT_SET_SELECTED_SERVICE'\r\nexport const REPORT_SET_START_DATE = 'REPORT_SET_START_DATE'\r\nexport const REPORT_SET_END_DATE = 'REPORT_SET_END_DATE'\r\nexport const REPORT_FIELD_CHANGE = 'REPORT_FIELD_CHANGE'\r\nexport const REPORT_SET_RESULT = 'REPORT_SET_RESULT'\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Paper, Grid, Button } from '@material-ui/core'\r\nimport TextField from '../../components/UI/TextField/TextField'\r\nimport Aux from '../../utils/Auxilary'\r\nimport classes from './Auth.css'\r\nimport bg from '../../assets/images/bitbird.png'\r\nimport { connect } from 'react-redux'\r\nimport * as authActions from '../../store/actions/auth'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        isInRegisterMode: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.formValidation();\r\n    }\r\n\r\n    formValidation = () => {\r\n        const errors = [];\r\n        if (this.state.isInRegisterMode) {\r\n            if (this.props.password != this.props.rePassword) errors.push('Password & RePassword are not equal.')\r\n            if (this.props.password.length < 5) errors.push('Password must be longer than 5 characters.')\r\n        }\r\n\r\n        this.setState({ errors: errors }, () => errors.length == 0 ? this.actionHandler() : null);\r\n    }\r\n\r\n    toggleRegisterModeHandler = () => this.setState(preState => { return { isInRegisterMode: !preState.isInRegisterMode } })\r\n\r\n    actionHandler = () => {\r\n        if (this.state.isInRegisterMode)\r\n            this.props.onRegister({ ...this.props })\r\n        else\r\n            this.props.onLogin({ ...this.props })\r\n    }\r\n\r\n    render() {\r\n        const style = { backgroundImage: `url(${bg})` }\r\n\r\n        const registerFields = <Aux>\r\n            <TextField required fullWidth type=\"password\" label=\"Re-Password\" name='rePassword' onChange={event => this.props.onFieldChanged(event)} />\r\n            <TextField required fullWidth label=\"Name\" name='name' onChange={event => this.props.onFieldChanged(event)} />\r\n            <TextField required fullWidth label=\"Family\" name='family' onChange={event => this.props.onFieldChanged(event)} />\r\n        </Aux>\r\n\r\n        return (\r\n            <form onSubmit={event => this.onSubmit(event)}>\r\n                <Grid container className={classes.container} >\r\n                    <Grid md={4} xs={0} item />\r\n                    <Grid md={4} xs={12} item>\r\n                        <Paper className={classes.loginPanel}>\r\n                            <Grid container>\r\n                                <Grid xs={12} item style={style} className={classes.loginHeader} />\r\n                                <Grid xs={12} item className={classes.loginText}><h3>Login</h3></Grid>\r\n                                <Grid xs={12} item className={classes.errorPanel}>\r\n                                    {\r\n                                        this.state.errors.map(error => <span>* {error}<br /></span>)\r\n                                    }\r\n                                </Grid>\r\n                                <TextField required fullWidth label=\"Username\" name=\"username\" value={this.props.username} onChange={event => this.props.onFieldChanged(event)} />\r\n                                <TextField required type=\"password\" name='password' fullWidth value={this.props.password} label=\"Password\" onChange={event => this.props.onFieldChanged(event)} />\r\n                                {\r\n                                    this.state.isInRegisterMode ? registerFields : null\r\n                                }\r\n                                <Grid container >\r\n                                    <Grid xs={12} item className={classes.buttonsGrid}>\r\n                                        <Button type='submit' fullWidth variant=\"contained\" color=\"secondary\" >{this.state.isInRegisterMode ? 'Register' : 'Login'}</Button>\r\n                                    </Grid>\r\n                                    <Grid xs={12} item className={classes.buttonsGrid}>\r\n                                        <Button onClick={this.toggleRegisterModeHandler} fullWidth color=\"primary\" >{this.state.isInRegisterMode ? 'Login' : 'SignUp'}</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                        <div className={classes.domainText}>This Demo is based on mock API, so some parts may Do Not work properly.</div>\r\n                    </Grid>\r\n                    <Grid md={4} item xs={0} />\r\n                </Grid>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = dispatch => {\r\n    return {\r\n        onLogin: (user) => dispatch(authActions.login(user)),\r\n        onFieldChanged: (event) => dispatch(authActions.onFieldChanged(event.target.name, event.target.value)),\r\n        onRegister: (user) => dispatch(authActions.onRegister(user))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Auth);","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport Aux from './Auxilary'\r\nimport { Snackbar, LinearProgress} from '@material-ui/core'\r\n\r\nconst axiosHandler = (WrappedComponent)=>{\r\n    return class extends Component{\r\n        state={\r\n            isLoading: false,\r\n            error: null\r\n        }\r\n\r\n        componentDidMount(){\r\n           \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ isLoading: true });\r\n                return req;\r\n            }, error => error);\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(response => {\r\n                this.setState({ isLoading: false });\r\n                return response;\r\n\r\n            }\r\n                , error => {\r\n                    let message = error.message;\r\n                    if (error.response != null) {\r\n                        switch (error.response.status) {\r\n                            case 400:\r\n                                //.Net core FluentValidator output to string\r\n                                message = \"Bad Request: \" + Object.entries(error.response.data).map(x => x[1]).map(error => `${error}`);\r\n                                break;\r\n                            case 401:\r\n                                message = \"Incorrect Username or Password!\";\r\n                                break;\r\n                            case 403:\r\n                                message = \"Access Denied!\";\r\n                                break;\r\n                            case 404:\r\n                                message = \"Network Error\";\r\n                                break;\r\n                            case 500:\r\n                                message = \"Oops! Server Error\";\r\n                                break;\r\n                            case 502:\r\n                                message = error.response.data;\r\n                                break;\r\n                            default:\r\n                                message = \"Undefined Erro: \" + error.response;\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    this.setState({ isLoading: false, error: message });\r\n                    return Promise.reject(error);\r\n                });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        render()\r\n        {\r\n            const message=\r\n                <Aux>\r\n                    <span >{this.state.error}</span>\r\n                    {this.state.isLoading ? <LinearProgress style={{width:300}} color=\"secondary\" variant=\"query\" /> : null}\r\n                </Aux>\r\n\r\n            return(\r\n                <Aux>\r\n                    <Snackbar \r\n                        autoHideDuration={3000}\r\n                        onClose={() => this.setState({ error: null })}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        open={this.state.error != null || this.state.isLoading}\r\n                        message={message} />\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default axiosHandler;","import React from 'react'\r\nimport { Grid, Button } from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport classes  from './MenuBar.css'\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport logo from '../../assets/images/bitbird.png'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\nimport ReportIcon from '@material-ui/icons/Poll'\r\nimport DeviceIcon from '@material-ui/icons/Router'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {connect} from 'react-redux'\r\nimport * as authActions from '../../store/actions/auth'\r\n\r\nconst MenuBar =(props)=>{\r\n\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Grid item xs={11}>\r\n                    <Link to='/services'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Services\" icon={<CloudIcon />} />\r\n                    </Link>\r\n                    <Link to='/Devices'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Devices\" icon={<DeviceIcon />} />\r\n                    </Link>\r\n                    <Link to='/Reports'>\r\n                        <BottomNavigationAction className={classes.selectedLinks} showLabel label=\"Reports\" icon={<ReportIcon />} />\r\n                    </Link>\r\n                </Grid>\r\n                <Button color=\"inherit\" onClick={props.onLogout} className={classes.rightLinks}  >Logout</Button>\r\n                <img src={logo} width=\"80\" height=\"80\" />\r\n            </Toolbar>\r\n       </AppBar>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        onLogout : () => dispatch(authActions.logOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(MenuBar);","import React, { Component } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport axiosHandler from '../../utils/axiosHandler'\r\nimport MenuBar from '../MenuBar/MenuBar'\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        \r\n        const menuBar =  this.props.isAuthenticated ? <MenuBar />  : null;\r\n\r\n        return (\r\n            <Grid container>\r\n                {menuBar}\r\n                <Grid item xs={12}>\r\n                    <main>\r\n                        {this.props.children}\r\n                    </main>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { isAuthenticated: state.auth.isAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps)(axiosHandler(Layout));","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\n\r\nconst setAll = (services) => {\r\n    return {\r\n        type: actionTypes.SERVICE_LOAD_SERVICE,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const getAll = () => {\r\n    return dispatch => {\r\n        axios.get('/Services').then(result => {\r\n            dispatch(setAll(result.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const addService = (title, serviceProperties) => {\r\n    const service = {\r\n        title: title,\r\n        serviceProperties: serviceProperties\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.post('/Services', service).then(result => {\r\n                dispatch(getAll())\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const editService = (id, title, serviceProperties) => {\r\n    const service = {\r\n\r\n        title: title,\r\n        serviceProperties: serviceProperties\r\n    }\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.put('/Services/' + id, service).then(result => {\r\n            dispatch(getAll());\r\n            dispatch(resetForms());\r\n            resolve();\r\n\r\n         })\r\n        }\r\n        );\r\n    }\r\n}\r\n\r\nexport const getServiceDetailsById = (id) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get('/Services/'+id).then(result=>{\r\n                console.log('data',result)\r\n                dispatch(onLoadServiceInfo(result.data))\r\n                resolve(result.data);\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteService = (guid) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.delete('/Services/' + guid).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const onLoadServiceInfo = (serviceInfo)=>{\r\n    return{\r\n        type: actionTypes.SERVICE_LOAD_SERVICE_INFO,\r\n        serviceInfo: serviceInfo\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const newPropertyHandler = () => {\r\n    return {\r\n        type: actionTypes.SERVICE_ADD_NEW_PROPERTIES\r\n    }\r\n}\r\n\r\nexport const removePropertyHandler = (index) => {\r\n    return {\r\n        type: actionTypes.SERVICE_DELETE_NEW_PROPERTIES,\r\n        index: index\r\n\r\n    }\r\n}\r\n\r\nexport const onPropertyTitleChanged = (index, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_PROPERTY_TITLE_CHANGED,\r\n        index: index,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const onPropertyCodeChanged = (index, value) => {\r\n    return {\r\n        type: actionTypes.SERVICE_PROPERTY_CODE_CHANGED,\r\n        index: index,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetForms = () => {\r\n    return {\r\n        type: actionTypes.SERVICE_CLEAR_FORMS\r\n    }\r\n}\r\n\r\nexport const onSelectService = (guid) => {\r\n    return {\r\n        type: actionTypes.SERVICE_SELECT_SERVICE,\r\n        id: guid\r\n    }\r\n}\r\n\r\n\r\n\r\n/*export const addService=(props)=>{\r\n    return dispatch=>{\r\n        axios.post('/services',)\r\n    }\r\n}*/","import React from 'react'\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst EmptyMessage = (props)=>{\r\n\r\n    const style={\r\n        padding:15,\r\n        width:'80%',\r\n        margin: '15px auto',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#888888'\r\n    }\r\n\r\n    return(\r\n        <Paper style={style}>{props.children == null ? 'Nothing is defined!' : props.children}</Paper>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default EmptyMessage;","import React from 'react'\r\nimport { Paper, Typography, Grid } from '@material-ui/core';\r\nimport classes from './ServiceInfo.css'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ServiceInfo = (props) => {\r\n\r\n    return (\r\n        <Grid xs={12} md={3} item >\r\n            <Paper \r\n                className={[classes.container, props.service.id === props.selectedId ? classes.selectedService : classes.notSelectedService].join(' ')}\r\n                onClick={()=>props.onSelectService(props.service.id)}>\r\n                <CloudIcon fontSize=\"large\" className={classes.icon} />\r\n                <Typography className={classes.title} variant=\"h5\" component=\"h3\">\r\n                    {props.service.title}\r\n                </Typography>\r\n                <Typography className={classes.text}  component=\"p\">\r\n                    {props.service.id}\r\n                </Typography>\r\n                <br />\r\n                <Link className={classes.link} to={`/Details/${props.service.id}`} >More Details</Link>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onSelectService: (id) => dispatch(serviceActions.onSelectService(id))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceInfo);","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary'\r\nimport EmptyMessage from '../../EmptyMessage/EmptyMessage';\r\nimport ServiceInfo from '../ServiceInfo/ServiceInfo';\r\n\r\nconst ServiceGrid = (props)=>{\r\n    return(\r\n        <Aux>\r\n            {props.services.length==0 ? \r\n                <EmptyMessage /> : \r\n                 props.services.map(service=><ServiceInfo service={service} key={service.id} />)\r\n            }\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default ServiceGrid;","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nconst CircleButton = (props) => {\r\n    let icon = null;\r\n    switch (props.type) {\r\n        default:\r\n        case 'add':\r\n            icon = <AddIcon />\r\n            break;\r\n        case 'edit':\r\n            icon = <EditIcon />\r\n            break;\r\n        case 'delete':\r\n            icon = <DeleteIcon />\r\n            break;\r\n    }\r\n\r\n    const style = {\r\n        marginLeft: 5\r\n    }\r\n\r\n\r\n    return (\r\n        props.visible\r\n            ?\r\n            <Button style={style} variant=\"fab\" {...props} >\r\n                {icon}\r\n            </Button>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default CircleButton;","import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst ButtonsBar = (props)=>{\r\n    const style = {\r\n        position: 'fixed',\r\n        bottom: 50,\r\n        right: 70\r\n    }\r\n    \r\n    return(\r\n        <Grid style={style} xs={12} item>\r\n            {props.children}\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default ButtonsBar;","import React from 'react'\r\nimport { Modal, Paper } from '@material-ui/core';\r\n\r\nconst MyModal = (props)=>{\r\n    const style = {\r\n        width: '25rem',\r\n        height: '50%',\r\n        margin: 'auto',\r\n        position: 'absolute'\r\n    }\r\n\r\n    return(\r\n        <Modal style={style} open={props.open}>\r\n            <Paper style={{ padding: 15 }}>\r\n                {props.children}\r\n            </Paper>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default MyModal;","import React, { Component } from 'react'\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Aux from '../../utils/Auxilary'\r\nimport classes from './Stepper.css'\r\n\r\nclass MyStepper extends Component {\r\n    state = {\r\n        activeStep: 0,\r\n        completed: [],\r\n    };\r\n\r\n    getSteps = () => [...this.props.steps]\r\n\r\n    getStepContent = (step) => this.props.children[step]\r\n\r\n    totalSteps = () => this.props.steps.length\r\n\r\n    isLastStep = () => this.state.activeStep === this.totalSteps() - 1;\r\n\r\n    completedSteps = () => [...this.state.completed].length\r\n\r\n    allStepsCompleted = () => this.completedSteps() === this.totalSteps()\r\n\r\n    handleNext = () => {\r\n        let activeStep;\r\n        if (this.isLastStep() && !this.allStepsCompleted()) {\r\n            const steps = this.getSteps();\r\n            activeStep = steps.findIndex((step, i) => !(i in this.state.completed))\r\n        }\r\n        else {\r\n            activeStep = this.state.activeStep + 1;\r\n        }\r\n        this.setState({\r\n            activeStep,\r\n        });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.setState(state => ({\r\n            activeStep: state.activeStep - 1,\r\n        }));\r\n    };\r\n\r\n    handleStep = step => () => {\r\n        this.setState({\r\n            activeStep: step,\r\n        });\r\n    };\r\n\r\n    handleComplete = () => {\r\n        const { completed } = this.state;\r\n        completed[this.state.activeStep] = true;\r\n        this.setState({\r\n            completed,\r\n        });\r\n        this.handleNext();\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            activeStep: 0,\r\n            completed: {},\r\n        });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.isLastStep() ? this.props.onSave() : this.handleComplete();\r\n    }\r\n\r\n    render() {\r\n        const steps = this.getSteps();\r\n        const { activeStep } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Stepper nonLinear activeStep={activeStep}>\r\n                    {steps.map((label, index) => {\r\n                        return (\r\n                            <Step key={label}>\r\n                                <StepButton\r\n                                    onClick={this.handleStep(index)}\r\n                                    completed={this.state.completed[index]}>\r\n                                    {label}\r\n                                </StepButton>\r\n                            </Step>\r\n                        );\r\n                    })}\r\n\r\n                </Stepper>\r\n                <div>\r\n                    {this.allStepsCompleted() ?\r\n\r\n                        <Button onClick={this.handleReset}>Finish</Button>\r\n                        :\r\n                        <div>\r\n                            <form onSubmit={event => this.onSubmit(event)}>{this.getStepContent(activeStep)}\r\n                                <div className={classes.buttonsRow}>\r\n\r\n                                    <div className={classes.navigationButtons}>\r\n                                        <Button\r\n                                            color='primary'\r\n                                            onClick={this.props.onClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className={classes.closeButton}>\r\n                                        <Button\r\n                                            disabled={activeStep === 0}\r\n                                            onClick={this.handleBack}>\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type='submit'>\r\n                                            {this.isLastStep() ? 'Save' : 'Next'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyStepper;","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport { connect } from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport classes from './ServiceProperties.css'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\n\r\nconst ServiceProperties = (props) => {\r\n    return (\r\n        <Aux>\r\n            <div className={classes.container}>\r\n            <div style={{marginBottom:20}}>\r\n                <span>\r\n                    You can define your service properties,title will show in web reports and code use in sending data.\r\n                </span>\r\n            </div>\r\n            \r\n            {props.serviceProperties.map((properties, index) =>\r\n                <div className={classes.propertiesContainer} key={index}>\r\n                    <TextField onChange={(event) => props.onPropertyTitleChanged(index,event.target.value)} className={classes.textField} autoFocus value={properties.title} required label='Property Title' />\r\n                    <TextField onChange={(event) => props.onPropertyCodeChanged(index, event.target.value)}  autoFocus value={properties.code} required label='Property Code' />\r\n                    <Button onClick={()=>props.onRemoveProperty(index)} className={classes.clearButton} mini className={classes.clearButton} color='secondary' variant='outlined'>X</Button>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            </div>\r\n            <Button color='secondary' variant='outlined' fullWidth onClick={props.onAddProperty}><AddIcon /></Button>\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { onAddProperty : () => dispatch(serviceActions.newPropertyHandler()),\r\n             onRemoveProperty : (index) => dispatch(serviceActions.removePropertyHandler(index)),\r\n             onPropertyTitleChanged : (index,value) => dispatch(serviceActions.onPropertyTitleChanged(index,value)),\r\n             onPropertyCodeChanged: (index, value) => dispatch(serviceActions.onPropertyCodeChanged(index, value)) }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceProperties);","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '../../UI/TextField/TextField'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport Stepper from '../../../containers/Stepper/Stepper'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport ServiceProperties from '../ServiceProperties/ServiceProperties';\r\n\r\nconst ServiceModal = (props) => {\r\n\r\n    const saveItemHandler = ()=> props.onSave(props.title, props.serviceProperties).then(()=>{\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    const updateItemHandler = () => props.onUpdate(props.selectedId, props.title, props.serviceProperties).then(()=>{\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n\r\n    return (\r\n        <Modal open={props.open}>\r\n            <Stepper steps={['Service Info', 'Service Properties']} onClose={props.onClose} onSave={props.selectedId==null ? saveItemHandler : updateItemHandler}>\r\n                    <TextField value={props.title} name='title' autoFocus required fullWidth label='Service Title' onChange={event => props.onTextChanged(event)} />\r\n                    <ServiceProperties />\r\n                </Stepper>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return { onTextChanged: (event) => dispatch(serviceActions.onFieldChanged(event.target.name, event.target.value)),\r\n             onSave: (title, serviceProperties) => dispatch(serviceActions.addService(title, serviceProperties)),\r\n             onResetForm: () => dispatch(serviceActions.resetForms()),\r\n             onUpdate: (id, title, serviceProperties) => dispatch(serviceActions.editService(id,title,serviceProperties))}\r\n}\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( ServiceModal);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport classes from './Service.css'\r\nimport { Grid } from '@material-ui/core';\r\nimport ServiceGrid from '../../components/Service/ServiceGrid/ServiceGrid';\r\nimport CircleButton from '../../components/UI/CircleButton/CircleButton';\r\nimport ButtonsBar from '../../components/UI/ButtonsBar/ButtonsBar';\r\nimport ServiceModal from '../../components/Service/ServiceModal/ServiceModal';\r\n\r\nclass Service extends Component {\r\n\r\n    state = {\r\n        isAddDialogOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getServices();\r\n    }\r\n\r\n    editServiceHandler = () => this.props.getServiceInfo(this.props.selectedId).then(this.setState({ isAddDialogOpen: true }))\r\n\r\n    openAddDialog = () => this.setState({ isAddDialogOpen: true })\r\n\r\n    closeAddDialog = () => this.setState({ isAddDialogOpen: false })\r\n\r\n    onAddButtonClick = () => {\r\n        this.props.resetForms();\r\n        this.openAddDialog();\r\n    }\r\n\r\n    render() {\r\n        const serviceGrid = this.props.services == null ? null : <ServiceGrid services={this.props.services} />\r\n\r\n        return (\r\n            <Grid container >\r\n                <ServiceModal open={this.state.isAddDialogOpen} onClose={this.closeAddDialog} />\r\n                <Grid xs={12} item className={classes.container}>\r\n                    <Grid container spacing={16}>\r\n                        {serviceGrid}\r\n                    </Grid>\r\n                </Grid>\r\n                <ButtonsBar>\r\n                    <CircleButton onClick={() => this.props.deleteService(this.props.selectedId)} visible={this.props.selectedId != null} type='delete' color='secondary' />\r\n                    <CircleButton onClick={this.editServiceHandler} visible={this.props.selectedId != null} type='edit' color='secondary' />\r\n                    <CircleButton onClick={this.onAddButtonClick} visible={true} type='add' color='primary' />\r\n                </ButtonsBar>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getServices: () => dispatch(serviceActions.getAll()),\r\n        deleteService: (guid) => dispatch(serviceActions.deleteService(guid)),\r\n        getServiceInfo: (guid) => dispatch(serviceActions.getServiceDetailsById(guid)),\r\n        resetForms: () => dispatch(serviceActions.resetForms())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Service);","import React, { Component } from 'react';\r\nimport { Paper, Typography, Chip, Avatar } from '@material-ui/core';\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { connect } from 'react-redux'\r\nimport classes from './ServiceDetails.css'\r\nimport Aux from '../../../utils/Auxilary';\r\n\r\nclass ServiceDetails extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetServiceDetails(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Paper className={classes.container}>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    {this.props.title}\r\n                </Typography>\r\n                {this.props.match.params.id}\r\n\r\n                <div className={classes.itemDetails}>\r\n                    {this.props.serviceProperties.map(\r\n                        (item, index) => <Chip\r\n                            avatar={<Avatar>{index + 1}</Avatar>}\r\n                            label={`${item.title} - ${item.code}`}\r\n                            color=\"secondary\"\r\n                            className={classes.chips}\r\n\r\n                        />\r\n                    )}\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { onGetServiceDetails: (id) => dispatch(serviceActions.getServiceDetailsById(id)) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceDetails);","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst setAll = (devices) => {\r\n    return {\r\n        type: actionTypes.DEVICE_LOAD_DEVICES,\r\n        devices: devices\r\n    }\r\n}\r\n\r\nexport const getAll = () =>{\r\n    return dispatch => {\r\n        axios.get('/Users').then(result=>{\r\n            dispatch(setAll(result.data))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const addDevice = (props) => {\r\n    const device = {\r\n        name: props.title,\r\n        family: props.desc,\r\n        username: props.username,\r\n        password: props.password,\r\n        serviceUsers: props.selectedServices.map(item => ({serviceId: item }))\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.post('/Users', device).then(result => {\r\n                dispatch(getAll())\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteDevice = (guid) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.delete('/Users/' + guid).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const editDevice = (id, props) => {\r\n    const device = {\r\n        name: props.title,\r\n        family: props.desc,\r\n        username: props.username,\r\n        password: props.password,\r\n        serviceUsers: props.selectedServices.map(item => ({ serviceId: item }))\r\n    }\r\n\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.put('/Users/' + id, device).then(result => {\r\n                dispatch(getAll());\r\n                dispatch(resetForms());\r\n                resolve();\r\n\r\n            })\r\n        }\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const getDeviceDetailsById = (id) => {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get('/Users/' + id).then(result => {\r\n                dispatch(onLoadDeviceInfo(result.data))\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const onLoadDeviceInfo = (deviceInfo) => {\r\n    return {\r\n        type: actionTypes.DEVICE_LOAD_DEVICE_INFO,\r\n        deviceInfo: deviceInfo\r\n    }\r\n}\r\n\r\nexport const onSelectServiceChanged = (guid) =>\r\n{\r\n    return{\r\n        type: actionTypes.DEVICE_ON_SELECT_SERVICE,\r\n        id: guid\r\n    }\r\n}\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.DEVICE_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetForms = () => {\r\n    return {\r\n        type: actionTypes.DEVICE_CLEAR_FORMS\r\n    }\r\n}\r\n\r\nexport const onSelectDevice = guid =>\r\n{\r\n    return{\r\n        type : actionTypes.DEVICE_SELECT_DEVICE,\r\n        id : guid\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Grid, Paper, Typography } from '@material-ui/core'\r\nimport classes from './DeviceInfo.css'\r\nimport DeviceIcon from '@material-ui/icons/Router'\r\nimport * as deviceActions from '../../../store/actions/device'\r\nimport {connect} from 'react-redux'\r\n\r\nconst DeviceInfo = (props) => {\r\n    return (\r\n        <Grid xs={12} md={3} item >\r\n            <Paper  \r\n                className={[classes.container, props.device.id === props.selectedId ? classes.selectedDevice : classes.notSelectedDevice].join(' ')}\r\n                onClick={() => props.onSelectDevice(props.device.id)}>\r\n                <div className={classes.iconContainer}>\r\n                    <DeviceIcon style={{ fontSize: 50 }} color='secondary' />\r\n                </div>\r\n                <div className={classes.detailsContainer}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        {props.device.name} \r\n                    </Typography>\r\n                    <Typography variant=\"h6\" >\r\n                        {props.device.family}\r\n                    </Typography>\r\n                    <span>\r\n                        {props.device.username}\r\n                    </span>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectDevice : (id) => dispatch( deviceActions.onSelectDevice(id) )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceInfo);","import React from 'react'\r\nimport Aux from '../../../utils/Auxilary'\r\nimport EmptyMessage from '../../EmptyMessage/EmptyMessage';\r\nimport DeviceInfo from '../DeviceInfo/DeviceInfo'\r\n\r\nconst DeviceGrid = (props) => {\r\n    return(\r\n        <Aux>\r\n            {props.devices.length == 0 ?\r\n                <EmptyMessage /> :\r\n                props.devices.map(device => <DeviceInfo device={device} key={device.id} />)\r\n            }\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\nexport default DeviceGrid;","import React from 'react'\r\nimport TextField from '../../UI/TextField/TextField'\r\nimport { connect } from 'react-redux'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceRegister = (props) =>{\r\n    return(\r\n        <div>\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.title}  name='title' required label='Title' fullWidth/>\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.desc} name='desc' required label='Desc' fullWidth />\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.username}  name='username' required label='Username' fullWidth />\r\n            <TextField onChange={event => props.onTextChanged(event)} value={props.password} name='password' required={props.selectedId == null}  label='Password' fullWidth type='password'/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTextChanged: (event) => dispatch(deviceActions.onFieldChanged(event.target.name, event.target.value))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceRegister);","import React from 'react'\r\nimport { Paper } from '@material-ui/core';\r\nimport { FormControlLabel, Switch } from '@material-ui/core'\r\n\r\nconst ServiceItem = (props) => {\r\n    return (\r\n\r\n        <Paper style={style.container}>\r\n            <label>\r\n                {props.service.title}\r\n            </label>\r\n            <Switch color='secondary' onChange={() => props.onChange(props.service.id)} checked={props.isSelected} value={props.service.id} />\r\n        </Paper>\r\n    )\r\n}\r\nconst style = {\r\n    container: {\r\n        margin: 10,\r\n        padding: 5,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n\r\n    }\r\n}\r\n\r\nexport default ServiceItem;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ServiceItem from './ServiceItem'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceServices = (props) => {\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            <div style={style.helper}>\r\n                <span>Select this device accessible services.</span>\r\n            </div>\r\n            {props.services == null\r\n                ? null :\r\n                props.services.map(service => <ServiceItem\r\n                    onChange={props.onSelectServiceChanged}\r\n                    isSelected={props.selectedServices.indexOf(service.id) != -1}\r\n                    service={service}\r\n                    key={service.id} />)}\r\n\r\n        </div>\r\n    )\r\n}\r\nconst style={\r\n    container:{\r\n        margin:10\r\n    },\r\n    helper:{\r\n        textAlign: 'center', padding: 5 \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectServiceChanged: (guid) => dispatch(deviceActions.onSelectServiceChanged(guid))\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.service, ...state.device })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceServices);","import React from 'react'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport Stepper from '../../../containers/Stepper/Stepper'\r\nimport DeviceRegister from '../DeviceRegister/DeviceRegister'\r\nimport DeviceServices from '../DeviceServices/DeviceServices';\r\nimport {connect} from 'react-redux'\r\nimport * as deviceActions from '../../../store/actions/device'\r\n\r\nconst DeviceModal = (props) =>\r\n{\r\n    const saveItemHandler = () => props.onSave({...props}).then(() => {\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    const updateItemHandler = () => props.onUpdate(props.selectedId, {...props}).then(() => {\r\n        props.onClose();\r\n        props.onResetForm();\r\n    });\r\n\r\n    return(\r\n        <Modal open={props.open}>\r\n            <Stepper steps={['Device Info', 'Service Accessibility']} onClose={props.onClose} onSave={props.selectedId == null ? saveItemHandler : updateItemHandler}>\r\n                <DeviceRegister />\r\n                <DeviceServices />\r\n            </Stepper>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onSave : (props) => dispatch(deviceActions.addDevice(props)),\r\n        onResetForm : () => dispatch(deviceActions.resetForms()),\r\n        onUpdate : (id,props) => dispatch(deviceActions.editDevice(id,props))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeviceModal);","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as deviceActions from '../../store/actions/device'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport DeviceGrid from '../../components/Device/DeviceGrid/DeviceGrid';\r\nimport { Grid} from '@material-ui/core'\r\nimport ButtonsBar from '../../components/UI/ButtonsBar/ButtonsBar'\r\nimport CircleButton from '../../components/UI/CircleButton/CircleButton'\r\nimport DeviceModal from '../../components/Device/DeviceModal/DeviceModal'\r\n\r\nclass Device extends Component{\r\n\r\n    state = {\r\n        isAddDialogOpen: false\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.props.loadDevices();\r\n        this.props.loadServices();\r\n    }\r\n\r\n    editDeviceHandler = () => this.props.getDeviceInfo(this.props.selectedId).then(this.openAddDialog())\r\n\r\n    openAddDialog = () => this.setState({ isAddDialogOpen: true });\r\n\r\n    closeAddDialog = () => this.setState({ isAddDialogOpen: false });\r\n    \r\n\r\n    render(){\r\n        const deviceGrid = this.props.devices == null ? null : <DeviceGrid devices={this.props.devices} />\r\n\r\n        return(\r\n            <Grid container >\r\n                <DeviceModal open={this.state.isAddDialogOpen} onClose={this.closeAddDialog} />\r\n                <Grid xs={12} item style={{padding:20,height:'80%'}}>\r\n                    <Grid container spacing={16}>\r\n                        {deviceGrid}\r\n                    </Grid>\r\n                </Grid>\r\n                <ButtonsBar>\r\n                    <CircleButton onClick={() => this.props.deleteDevice(this.props.selectedId)} visible={this.props.selectedId != null} type='delete' color='secondary' />\r\n                    <CircleButton onClick={this.editDeviceHandler} visible={this.props.selectedId != null} type='edit' color='secondary' />\r\n                    <CircleButton onClick={this.openAddDialog} visible={true} type='add' color='primary' />\r\n                </ButtonsBar>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.device})\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        loadDevices : () => dispatch(deviceActions.getAll()),\r\n        loadServices : () => dispatch(serviceActions.getAll()),\r\n        deleteDevice : (id) => dispatch(deviceActions.deleteDevice(id)),\r\n        getDeviceInfo: (guid) => dispatch(deviceActions.getDeviceDetailsById(guid)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( Device);","import React from 'react'\r\nimport { Select, MenuItem} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\n\r\nconst ServicesSelect = (props) =>{\r\n    return(\r\n        <Select  fullWidth\r\n            value={props.selectedValue} \r\n            onChange={event => props.onChange(event.target.value)}>\r\n            {props.services.map(service => <MenuItem key={service.id} value={service.id}>{service.title}</MenuItem>)}\r\n            \r\n        </Select>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.service})\r\n\r\nexport default connect(mapStateToProps)(ServicesSelect);","import React from 'react'\r\nimport { Typography,  TextField, FormControl, Button } from '@material-ui/core'\r\nimport moment from 'moment'\r\nimport Modal from '../../UI/Modal/Modal'\r\nimport ServicesSelect from '../../Service/ServicesSelect/ServicesSelect';\r\n\r\nconst ReportModal = (props) =>\r\n{\r\n    return(\r\n        <Modal open={props.open}>\r\n            <FormControl fullWidth>\r\n                <div style={style.container}> \r\n                    <Typography color='secondary' variant=\"h6\" >\r\n                    {props.title}\r\n                    </Typography>\r\n                </div>\r\n                <br />\r\n                <span>Select Service:</span>\r\n                <ServicesSelect selectedValue={props.selectedService} onChange={props.onSelectedServiceChanged} />\r\n                <br />\r\n                <TextField onChange={event => props.onTextChanged(event)} name='from' label='Select Start Date' type='datetime-local' value={props.getPropsHandler('from')} />\r\n                <br />\r\n                <TextField onChange={event => props.onTextChanged(event)} name='to' label='Select End Date' type='datetime-local' value={props.getPropsHandler('to')} />\r\n                <br />\r\n                <div style={style.buttonsRow}>\r\n                    \r\n                    <Button onClick={props.onClose} color='primary'> Close</Button>\r\n                    <Button onClick={props.onFinish} variant='contained' color='primary'> Finish</Button>\r\n\r\n                </div>\r\n            </FormControl>\r\n        </Modal>\r\n\r\n    )\r\n}\r\nconst style={\r\n    container:{\r\n        textAlign: 'center',\r\n        margin:5\r\n    }\r\n    ,\r\n    buttonsRow: {\r\n        textAlign: 'right'\r\n    }\r\n}\r\n\r\nexport default ReportModal;","import React from 'react'\r\nimport { Typography, Paper } from '@material-ui/core'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport {connect} from 'react-redux'\r\nimport * as reportActions from '../../../store/actions/report'\r\nimport ReportModal from '../ReportModal/ReportModal';\r\n\r\nconst ReportItem = (props) => {\r\n\r\n    const REPORT_NAME = props.name;\r\n    \r\n    const style = {\r\n        padding: 10,\r\n        backgroundColor: props.color,\r\n        minHeight: 150,\r\n        cursor: props.disable ? 'cursor' : 'pointer',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        display: 'flex',\r\n        color: '#ffffff',\r\n        flexDirection:'column'\r\n    }\r\n\r\n    const onFinishHandler = () =>\r\n    {\r\n        props.setSelectedReport('');\r\n        props.onFinish();\r\n    }\r\n\r\n    const getPropsHandler = field => props[field]\r\n\r\n    \r\n    return (\r\n        <Aux>\r\n            <Paper style={style} onClick={!props.disable ? ()=>props.setSelectedReport(REPORT_NAME) : null}>\r\n                <Typography color='inherit' variant=\"h4\" >\r\n                    {props.title}\r\n                </Typography>\r\n                \r\n                {props.disable ? <span >(disabled)</span> :  null}\r\n\r\n            </Paper>\r\n            <ReportModal \r\n                title={props.title} \r\n                open={props.selectedReport == REPORT_NAME}\r\n                selectedService={props.selectedService} \r\n                onSelectedServiceChanged={props.setSelectedServiceHandler}\r\n                onClose={()=>props.setSelectedReport('')}\r\n                onTextChanged = {props.onTextChangedHandler}\r\n                onFinish={()=>onFinishHandler()}\r\n                getPropsHandler={getPropsHandler} /> \r\n           \r\n        </Aux>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({...state.report})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return{\r\n        setSelectedReport : (report) => dispatch(reportActions.setSelectedReport(report)),\r\n        setSelectedServiceHandler : (service) => dispatch(reportActions.setSelectedService(service)),\r\n        onTextChangedHandler : (event) => dispatch(reportActions.onFieldChanged(event.target.name,event.target.value))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportItem);","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const setSelectedService = (selectedService) =>\r\n{\r\n    return{\r\n        type: actionTypes.REPORT_SET_SELECTED_SERVICE,\r\n        selectedService : selectedService\r\n    }\r\n}\r\n\r\nexport const setSelectedReport = (selectedReport) =>\r\n{\r\n    return {\r\n        type: actionTypes.REPORT_SET_SELECTED_REPORT,\r\n        selectedReport : selectedReport\r\n    }\r\n}\r\n\r\nexport const getData = (guid,filters) =>\r\n{\r\n   // return dispatch => {\r\n        return new Promise(resolve => {\r\n            axios.get(`/Data/${guid}?${filters}`).then(result => {\r\n                resolve(result.data);\r\n            })\r\n        }\r\n        )\r\n  //  }\r\n}\r\n\r\n\r\nexport const onFieldChanged = (field, value) => {\r\n    return {\r\n        type: actionTypes.REPORT_FIELD_CHANGE,\r\n        field: field,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setReportResult = (rows,columns) =>\r\n{\r\n    return{\r\n        type: actionTypes.REPORT_SET_RESULT,\r\n        rows: rows,\r\n        columns: columns\r\n    }\r\n}\r\n\r\n","import * as reportActions from '../../../store/actions/report'\r\nimport * as serviceActions from '../../../store/actions/service'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReportItem from '../ReportItem/ReportItem'\r\nimport Aux from '../../../utils/Auxilary';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst SimpleReport = (props) => {\r\n\r\n    console.log('simpleReport',props)\r\n    const onFinish = () => {\r\n        Promise.all(\r\n            [reportActions.getData(props.selectedService, `from=${props.from}&to=${props.to}`),getColumns()]\r\n            ).then(result => {\r\n                const rows = []\r\n                const serviceProperties = [...result[1].serviceProperties];\r\n\r\n                /*\r\n                It may sedbem confusing!\r\n                imagine that you have a service with 10 columns.\r\n                your device may send data for all of them or may be just for one or two.\r\n                tour raw data its something like this:\r\n                    {logDate: ----,\r\n                    registerData:---,\r\n                    serviceData: \r\n                        [\r\n                            data: '-----',\r\n                            code: '-----',\r\n                            serviceProperty:{\r\n                                id: '-----',\r\n                                code: '-----',\r\n                                title: '-----\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n\r\n                so what we do here is convert this rows to columns and insert each data in its related column.\r\n                */\r\n\r\n                result[0].map((log, index) => {\r\n                    const info = [index + 1, log.logDate, log.registerDate]\r\n                    const dynamicColumns = [...serviceProperties].map(property => { const isExist = log.serviceData.find(data => data.serviceProperty.id === property.id); return isExist == undefined ? '--' : isExist.data })\r\n                    rows.push(info.concat(dynamicColumns))\r\n                })\r\n\r\n                props.onSetResult(rows, ['#', 'Log Date', 'Register Date', ...serviceProperties.map(col => col.title)]);\r\n\r\n                props.history.push(`ReportResult/${props.selectedService}`)\r\n            })\r\n\r\n    }\r\n\r\n    const getColumns = () => {\r\n        return new Promise(resolve => {\r\n            props.getServiceInfo(props.selectedService).then(result => resolve(result))\r\n        }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <ReportItem disable onFinish={onFinish} title='Simple Report' color='#00e5ff' name='SIMPLE_REPORT' />\r\n        </Aux>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.report })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetResult: (rows, columns) => dispatch(reportActions.setReportResult(rows, columns)),\r\n        getServiceInfo: (id) => dispatch(serviceActions.getServiceDetailsById(id)),\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SimpleReport));\r\n\r\n","import React , {Component} from 'react'\r\nimport {Grid, Button} from '@material-ui/core'\r\nimport ReportItem from '../../components/Reports/ReportItem/ReportItem';\r\nimport classes from './Report.css'\r\nimport {connect} from 'react-redux'\r\nimport * as serviceActions from '../../store/actions/service'\r\nimport SimpleReport from '../../components/Reports/SimpleReport/SimpleReport'\r\n\r\nclass Report extends Component{\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.loadServices();\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <div className={classes.container} >\r\n                <Grid container spacing={32}>\r\n                    <Grid item md={3} xs={12}>\r\n                        <SimpleReport disable title='Simplessss Report' color='#00e5ff' name='SIMPLE_REPORT' />\r\n                    </Grid>\r\n                    <Grid item md={3} xs={12}>\r\n                        <ReportItem disable title='Log Report' color='#ff3d00' name='LOG_REPORT' />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return{\r\n        loadServices : () => dispatch(serviceActions.getAll())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({...state.report})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Report);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nconst ReportResult = (props) => {\r\n\r\n    const serviceId = props.match.params.serviceId;\r\n    const style={\r\n        container:{\r\n            padding: 20\r\n        }\r\n    }\r\n    return (\r\n        <div style={style.container}>\r\n        <Paper>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.columns.map((column, index) => <TableCell key={index}>{column}</TableCell>)}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.rows.map((row, index) =>\r\n                        <TableRow key={index}>\r\n                            {row.map((col, index) => <TableCell key={index}> {col}</TableCell>)}\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.report })\r\n\r\nexport default connect(mapStateToProps)(ReportResult);","import React, { Component } from 'react';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Layout from './components/Layout/Layout'\r\nimport classes from './App.css'\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom'\r\nimport Service from './containers/Service/Service';\r\nimport Axios from 'axios';\r\nimport * as authAction from './store/actions/auth'\r\nimport {connect} from 'react-redux'\r\nimport ServiceDetails from './components/Service/ServiceDetails/ServiceDetails'\r\nimport Device from './containers/Device/Device'\r\nimport Report from './containers/Report/Report'\r\nimport ReportResult from './components/Reports/ReportResult/ReportResult'\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount(){\r\n    if (localStorage.getItem('token') != null)\r\n      this.props.checkTokenHandler(localStorage.getItem('token'));\r\n  }\r\n  \r\n  render() {\r\n\r\n   \r\n\r\n    const routes = this.props.isAuthenticated ? \r\n      <Switch>\r\n        <Route path=\"/Details/:id\" component={ServiceDetails} />\r\n        <Route path=\"/Devices\" component={Device} />\r\n        <Route path=\"/ReportResult/:serviceId\" component={ReportResult} />\r\n        <Route path=\"/Reports\" component={Report} />\r\n        <Route path=\"/\" component={Service} />\r\n      </Switch>\r\n      :\r\n      <Switch>\r\n        <Route path=\"/\" component={Auth} />\r\n      </Switch>\r\n    \r\n    return (\r\n      <Layout>\r\n        {routes}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n  return { isAuthenticated : state.auth.isAuthenticated}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    checkTokenHandler : (token) => dispatch(authAction.checkToken(token))\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState = {\r\n    isAuthenticated: false,\r\n    token: null,\r\n    username: 'Doesnt matter',\r\n    password: '123',\r\n    rePassword: '',\r\n    name: '',\r\n    family: '',\r\n\r\n};\r\n\r\nconst resucer = (state = initState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.LOGIN:\r\n            return {...state,isAuthenticated:true,token:action.token}\r\n        case actionTypes.AUTH_FIELD_CHANGE:\r\n            return {...state,[action.filed]:action.value}\r\n        case actionTypes.LOGOUT:\r\n            return {...initState}\r\n        default :\r\n            return state;            \r\n    }\r\n}\r\n\r\nexport default resucer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState={\r\n    services: null,\r\n    title:'',\r\n    serviceProperties: [{id:null, title: '', code: ''}],\r\n    selectedId: null\r\n    \r\n}\r\n\r\nconst reducer = (state = initState,action)=>{\r\n    \r\n    switch(action.type)\r\n    {\r\n        case actionTypes.SERVICE_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n            \r\n        case actionTypes.SERVICE_LOAD_SERVICE:\r\n            return { ...state, services: action.services }\r\n\r\n        case actionTypes.SERVICE_ADD_NEW_PROPERTIES:\r\n            return {...state,serviceProperties: [...state.serviceProperties].concat({id: null,title: '' ,code: ''})}\r\n\r\n        case actionTypes.SERVICE_DELETE_NEW_PROPERTIES:\r\n            return {...state,serviceProperties:[...state.serviceProperties].filter((x,index)=> index!=action.index)}\r\n\r\n        case actionTypes.SERVICE_PROPERTY_TITLE_CHANGED:\r\n            const titleServiceProperties = [...state.serviceProperties];\r\n            titleServiceProperties.splice(action.index, 1, { id: titleServiceProperties[action.index].id, title: action.value, code: titleServiceProperties[action.index].code})\r\n            return { ...state, serviceProperties: titleServiceProperties }\r\n\r\n        case actionTypes.SERVICE_PROPERTY_CODE_CHANGED:\r\n            const codeServiceProperties = [...state.serviceProperties];\r\n            codeServiceProperties.splice(action.index, 1, { id: codeServiceProperties[action.index].id ,code: action.value, title: codeServiceProperties[action.index].title })\r\n            return { ...state, serviceProperties: codeServiceProperties }\r\n        \r\n        case actionTypes.SERVICE_CLEAR_FORMS:\r\n            return { ...initState, services: state.services};\r\n\r\n        case actionTypes.SERVICE_SELECT_SERVICE:\r\n            return { ...state, selectedId: action.id == state.selectedId ? null : action.id}\r\n\r\n        case actionTypes.SERVICE_LOAD_SERVICE_INFO:\r\n            const service = action.serviceInfo;    \r\n            return { ...state,title: service.title, serviceProperties: service.serviceProperties}\r\n        \r\n        default:\r\n            return state; \r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initState = {\r\n    devices: null,\r\n    selectedId: null,\r\n    title: '',\r\n    desc: '',\r\n    username: '',\r\n    password: '',\r\n    selectedServices: []\r\n    \r\n}\r\n\r\nconst reducer = ( state = initState , action ) =>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.DEVICE_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n\r\n        case actionTypes.DEVICE_LOAD_DEVICES:\r\n            return {...state,devices: action.devices}\r\n\r\n        case actionTypes.DEVICE_SELECT_DEVICE:\r\n            return {...state,selectedId: state.selectedId == action.id ? null : action.id }\r\n\r\n        case actionTypes.DEVICE_ON_SELECT_SERVICE:\r\n            const serviceId = action.id;\r\n            const isIdExist = state.selectedServices.indexOf(serviceId)!=-1;\r\n            return{ ...state, \r\n                selectedServices: isIdExist ? state.selectedServices.filter(id => id != serviceId) : state.selectedServices.concat(serviceId)}\r\n\r\n        case actionTypes.DEVICE_CLEAR_FORMS:\r\n            return { ...initState, devices: state.devices };\r\n\r\n        case actionTypes.DEVICE_LOAD_DEVICE_INFO:\r\n            const device = action.deviceInfo;\r\n            return { ...state, title: device.name,\r\n                        desc: device.family,\r\n                        username: device.username,\r\n                        selectedServices: device.serviceUsers.map(service => service.serviceId) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport moment from 'moment'\r\n\r\nconst initState ={\r\n    selectedReport: '',\r\n    selectedService: '',\r\n    from: moment().add(-1, 'days').format('YYYY-MM-DDT00:00'),\r\n    to: moment().format('YYYY-MM-DDT23:59'),\r\n    rows: [],\r\n    columns: []\r\n\r\n}\r\n\r\nconst reducer = (state = initState , action) =>\r\n{\r\n    switch(action.type){\r\n        \r\n        case actionTypes.REPORT_FIELD_CHANGE:\r\n            return { ...state, [action.field]: action.value }\r\n\r\n        case actionTypes.REPORT_SET_SELECTED_REPORT:\r\n            return {...state,selectedReport : action.selectedReport}\r\n\r\n        case actionTypes.REPORT_SET_SELECTED_SERVICE:\r\n            return {...state,selectedService : action.selectedService}\r\n\r\n        case actionTypes.REPORT_SET_RESULT:\r\n            return { ...state, rows: action.rows , columns: action.columns}\r\n\r\n        \r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {applyMiddleware,createStore,combineReducers} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport authReducer from './store/reducers/auth'\r\nimport serviceReducer from './store/reducers/service'\r\nimport deviceReducer from './store/reducers/device'\r\nimport reportReducer from './store/reducers/report'\r\nimport thunk from 'redux-thunk'\r\nimport axios from 'axios'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\n\r\nconst reducers = combineReducers(\r\n    { auth: authReducer, \r\n      service: serviceReducer,\r\n      device: deviceReducer,\r\n      report: reportReducer}\r\n    );\r\nconst store=createStore(reducers, applyMiddleware(thunk));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n});\r\n\r\naxios.defaults.baseURL=\"https://5ee0f4c030deff0016c3f93e.mockapi.io/\";\r\n\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><MuiThemeProvider theme={theme}><App /></MuiThemeProvider></BrowserRouter></Provider> , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceProperties__container___18vJ3\",\"propertiesContainer\":\"ServiceProperties__propertiesContainer___1UxNg\",\"textField\":\"ServiceProperties__textField___1xReR\",\"clearButton\":\"ServiceProperties__clearButton___2ja3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DeviceInfo__container___2lvJD\",\"iconContainer\":\"DeviceInfo__iconContainer___2aqsj\",\"detailsContainer\":\"DeviceInfo__detailsContainer___3gAy0\",\"selectedDevice\":\"DeviceInfo__selectedDevice___3vDJE\",\"notSelectedDevice\":\"DeviceInfo__notSelectedDevice___15S6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuBar__container___3Ku8t\",\"selectedLinks\":\"MenuBar__selectedLinks___PLiE8\",\"rightLinks\":\"MenuBar__rightLinks___1bFoP\"};","module.exports = __webpack_public_path__ + \"static/media/bitbird.b83e038b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsRow\":\"Stepper__buttonsRow___2YVqK\",\"navigationButtons\":\"Stepper__navigationButtons___h_TJL\",\"closeButton\":\"Stepper__closeButton___y_FzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ServiceDetails__container___W0Z-9\",\"itemDetails\":\"ServiceDetails__itemDetails___3Lg2R\",\"chips\":\"ServiceDetails__chips___1Wvh0\"};"],"sourceRoot":""}